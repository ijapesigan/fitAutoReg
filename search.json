[{"path":"https://github.com/ijapesigan/fitAutoReg/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://github.com/ijapesigan/fitAutoReg/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://github.com/ijapesigan/fitAutoReg/articles/fitAutoReg.html","id":"description","dir":"Articles","previous_headings":"","what":"Description","title":"fitAutoReg: Fit Autoregressive Models","text":"Fit autoregressive models.","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/articles/fitAutoReg.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"fitAutoReg: Fit Autoregressive Models","text":"can install released version fitAutoReg GitHub :","code":"if (!require(\"remotes\")) install.packages(\"remotes\") remotes::install_github(\"ijapesigan/fitAutoReg\")"},{"path":"https://github.com/ijapesigan/fitAutoReg/articles/fitAutoReg.html","id":"more-information","dir":"Articles","previous_headings":"","what":"More Information","title":"fitAutoReg: Fit Autoregressive Models","text":"See GitHub Pages package documentation. See Quarto Pub package wiki resources.","code":""},{"path":[]},{"path":"https://github.com/ijapesigan/fitAutoReg/articles/session/session.html","id":"session","dir":"Articles > Session","previous_headings":"","what":"Session","title":"fitAutoReg: Session","text":"","code":"sessionInfo() #> R version 4.3.1 (2023-06-16) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.2 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] fitAutoReg_0.9.1 #>  #> loaded via a namespace (and not attached): #>  [1] vctrs_0.6.3       cli_3.6.1         knitr_1.43        rlang_1.1.1       #>  [5] xfun_0.39         stringi_1.7.12    purrr_1.0.1       textshaping_0.3.6 #>  [9] jsonlite_1.8.7    glue_1.6.2        rprojroot_2.0.3   htmltools_0.5.5   #> [13] ragg_1.2.5        sass_0.4.7        rmarkdown_2.23    evaluate_0.21     #> [17] jquerylib_0.1.4   fastmap_1.1.1     yaml_2.3.7        lifecycle_1.0.3   #> [21] memoise_2.0.1     stringr_1.5.0     compiler_4.3.1    fs_1.6.3          #> [25] Rcpp_1.0.11       systemfonts_1.0.4 digest_0.6.33     R6_2.5.1          #> [29] magrittr_2.0.3    bslib_0.5.0       tools_4.3.1       pkgdown_2.0.7     #> [33] cachem_1.0.8      desc_1.4.2"},{"path":"https://github.com/ijapesigan/fitAutoReg/articles/session/session.html","id":"packages","dir":"Articles > Session","previous_headings":"","what":"Packages","title":"fitAutoReg: Session","text":"","code":"installed.packages() #>               Package         LibPath                           Version      #> askpass       \"askpass\"       \"/home/runner/work/_temp/Library\" \"1.1\"        #> base64enc     \"base64enc\"     \"/home/runner/work/_temp/Library\" \"0.1-3\"      #> brio          \"brio\"          \"/home/runner/work/_temp/Library\" \"1.1.3\"      #> bslib         \"bslib\"         \"/home/runner/work/_temp/Library\" \"0.5.0\"      #> cachem        \"cachem\"        \"/home/runner/work/_temp/Library\" \"1.0.8\"      #> callr         \"callr\"         \"/home/runner/work/_temp/Library\" \"3.7.3\"      #> cli           \"cli\"           \"/home/runner/work/_temp/Library\" \"3.6.1\"      #> crayon        \"crayon\"        \"/home/runner/work/_temp/Library\" \"1.5.2\"      #> curl          \"curl\"          \"/home/runner/work/_temp/Library\" \"5.0.1\"      #> desc          \"desc\"          \"/home/runner/work/_temp/Library\" \"1.4.2\"      #> diffobj       \"diffobj\"       \"/home/runner/work/_temp/Library\" \"0.3.5\"      #> digest        \"digest\"        \"/home/runner/work/_temp/Library\" \"0.6.33\"     #> downlit       \"downlit\"       \"/home/runner/work/_temp/Library\" \"0.4.3\"      #> ellipsis      \"ellipsis\"      \"/home/runner/work/_temp/Library\" \"0.3.2\"      #> evaluate      \"evaluate\"      \"/home/runner/work/_temp/Library\" \"0.21\"       #> fansi         \"fansi\"         \"/home/runner/work/_temp/Library\" \"1.0.4\"      #> fastmap       \"fastmap\"       \"/home/runner/work/_temp/Library\" \"1.1.1\"      #> fitAutoReg    \"fitAutoReg\"    \"/home/runner/work/_temp/Library\" \"0.9.1\"      #> fontawesome   \"fontawesome\"   \"/home/runner/work/_temp/Library\" \"0.5.1\"      #> fs            \"fs\"            \"/home/runner/work/_temp/Library\" \"1.6.3\"      #> glue          \"glue\"          \"/home/runner/work/_temp/Library\" \"1.6.2\"      #> highr         \"highr\"         \"/home/runner/work/_temp/Library\" \"0.10\"       #> htmltools     \"htmltools\"     \"/home/runner/work/_temp/Library\" \"0.5.5\"      #> httr          \"httr\"          \"/home/runner/work/_temp/Library\" \"1.4.6\"      #> jquerylib     \"jquerylib\"     \"/home/runner/work/_temp/Library\" \"0.1.4\"      #> jsonlite      \"jsonlite\"      \"/home/runner/work/_temp/Library\" \"1.8.7\"      #> knitr         \"knitr\"         \"/home/runner/work/_temp/Library\" \"1.43\"       #> lifecycle     \"lifecycle\"     \"/home/runner/work/_temp/Library\" \"1.0.3\"      #> magrittr      \"magrittr\"      \"/home/runner/work/_temp/Library\" \"2.0.3\"      #> memoise       \"memoise\"       \"/home/runner/work/_temp/Library\" \"2.0.1\"      #> mime          \"mime\"          \"/home/runner/work/_temp/Library\" \"0.12\"       #> openssl       \"openssl\"       \"/home/runner/work/_temp/Library\" \"2.1.0\"      #> pillar        \"pillar\"        \"/home/runner/work/_temp/Library\" \"1.9.0\"      #> pkgconfig     \"pkgconfig\"     \"/home/runner/work/_temp/Library\" \"2.0.3\"      #> pkgdown       \"pkgdown\"       \"/home/runner/work/_temp/Library\" \"2.0.7\"      #> pkgload       \"pkgload\"       \"/home/runner/work/_temp/Library\" \"1.3.2.1\"    #> praise        \"praise\"        \"/home/runner/work/_temp/Library\" \"1.0.0\"      #> processx      \"processx\"      \"/home/runner/work/_temp/Library\" \"3.8.2\"      #> ps            \"ps\"            \"/home/runner/work/_temp/Library\" \"1.7.5\"      #> purrr         \"purrr\"         \"/home/runner/work/_temp/Library\" \"1.0.1\"      #> R6            \"R6\"            \"/home/runner/work/_temp/Library\" \"2.5.1\"      #> ragg          \"ragg\"          \"/home/runner/work/_temp/Library\" \"1.2.5\"      #> rappdirs      \"rappdirs\"      \"/home/runner/work/_temp/Library\" \"0.3.3\"      #> Rcpp          \"Rcpp\"          \"/home/runner/work/_temp/Library\" \"1.0.11\"     #> RcppArmadillo \"RcppArmadillo\" \"/home/runner/work/_temp/Library\" \"0.12.4.1.0\" #> rematch2      \"rematch2\"      \"/home/runner/work/_temp/Library\" \"2.1.2\"      #> rlang         \"rlang\"         \"/home/runner/work/_temp/Library\" \"1.1.1\"      #> rmarkdown     \"rmarkdown\"     \"/home/runner/work/_temp/Library\" \"2.23\"       #> rprojroot     \"rprojroot\"     \"/home/runner/work/_temp/Library\" \"2.0.3\"      #> sass          \"sass\"          \"/home/runner/work/_temp/Library\" \"0.4.7\"      #> sessioninfo   \"sessioninfo\"   \"/home/runner/work/_temp/Library\" \"1.2.2\"      #> stringi       \"stringi\"       \"/home/runner/work/_temp/Library\" \"1.7.12\"     #> stringr       \"stringr\"       \"/home/runner/work/_temp/Library\" \"1.5.0\"      #> sys           \"sys\"           \"/home/runner/work/_temp/Library\" \"3.4.2\"      #> systemfonts   \"systemfonts\"   \"/home/runner/work/_temp/Library\" \"1.0.4\"      #> testthat      \"testthat\"      \"/home/runner/work/_temp/Library\" \"3.1.10\"     #> textshaping   \"textshaping\"   \"/home/runner/work/_temp/Library\" \"0.3.6\"      #> tibble        \"tibble\"        \"/home/runner/work/_temp/Library\" \"3.2.1\"      #> tinytex       \"tinytex\"       \"/home/runner/work/_temp/Library\" \"0.45\"       #> utf8          \"utf8\"          \"/home/runner/work/_temp/Library\" \"1.2.3\"      #> vctrs         \"vctrs\"         \"/home/runner/work/_temp/Library\" \"0.6.3\"      #> waldo         \"waldo\"         \"/home/runner/work/_temp/Library\" \"0.5.1\"      #> whisker       \"whisker\"       \"/home/runner/work/_temp/Library\" \"0.4.1\"      #> withr         \"withr\"         \"/home/runner/work/_temp/Library\" \"2.5.0\"      #> xfun          \"xfun\"          \"/home/runner/work/_temp/Library\" \"0.39\"       #> xml2          \"xml2\"          \"/home/runner/work/_temp/Library\" \"1.3.5\"      #> yaml          \"yaml\"          \"/home/runner/work/_temp/Library\" \"2.3.7\"      #> pak           \"pak\"           \"/opt/R/4.3.1/lib/R/site-library\" \"0.5.1\"      #> base          \"base\"          \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> boot          \"boot\"          \"/opt/R/4.3.1/lib/R/library\"      \"1.3-28.1\"   #> class         \"class\"         \"/opt/R/4.3.1/lib/R/library\"      \"7.3-22\"     #> cluster       \"cluster\"       \"/opt/R/4.3.1/lib/R/library\"      \"2.1.4\"      #> codetools     \"codetools\"     \"/opt/R/4.3.1/lib/R/library\"      \"0.2-19\"     #> compiler      \"compiler\"      \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> datasets      \"datasets\"      \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> foreign       \"foreign\"       \"/opt/R/4.3.1/lib/R/library\"      \"0.8-84\"     #> graphics      \"graphics\"      \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> grDevices     \"grDevices\"     \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> grid          \"grid\"          \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> KernSmooth    \"KernSmooth\"    \"/opt/R/4.3.1/lib/R/library\"      \"2.23-21\"    #> lattice       \"lattice\"       \"/opt/R/4.3.1/lib/R/library\"      \"0.21-8\"     #> MASS          \"MASS\"          \"/opt/R/4.3.1/lib/R/library\"      \"7.3-60\"     #> Matrix        \"Matrix\"        \"/opt/R/4.3.1/lib/R/library\"      \"1.5-4.1\"    #> methods       \"methods\"       \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> mgcv          \"mgcv\"          \"/opt/R/4.3.1/lib/R/library\"      \"1.8-42\"     #> nlme          \"nlme\"          \"/opt/R/4.3.1/lib/R/library\"      \"3.1-162\"    #> nnet          \"nnet\"          \"/opt/R/4.3.1/lib/R/library\"      \"7.3-19\"     #> parallel      \"parallel\"      \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> rpart         \"rpart\"         \"/opt/R/4.3.1/lib/R/library\"      \"4.1.19\"     #> spatial       \"spatial\"       \"/opt/R/4.3.1/lib/R/library\"      \"7.3-16\"     #> splines       \"splines\"       \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> stats         \"stats\"         \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> stats4        \"stats4\"        \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> survival      \"survival\"      \"/opt/R/4.3.1/lib/R/library\"      \"3.5-5\"      #> tcltk         \"tcltk\"         \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> tools         \"tools\"         \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> utils         \"utils\"         \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #>               Priority      Depends                                         #> askpass       NA            NA                                              #> base64enc     NA            \"R (>= 2.9.0)\"                                  #> brio          NA            NA                                              #> bslib         NA            \"R (>= 2.10)\"                                   #> cachem        NA            NA                                              #> callr         NA            \"R (>= 3.4)\"                                    #> cli           NA            \"R (>= 3.4)\"                                    #> crayon        NA            NA                                              #> curl          NA            \"R (>= 3.0.0)\"                                  #> desc          NA            \"R (>= 3.4)\"                                    #> diffobj       NA            \"R (>= 3.1.0)\"                                  #> digest        NA            \"R (>= 3.3.0)\"                                  #> downlit       NA            \"R (>= 3.4.0)\"                                  #> ellipsis      NA            \"R (>= 3.2)\"                                    #> evaluate      NA            \"R (>= 3.0.2)\"                                  #> fansi         NA            \"R (>= 3.1.0)\"                                  #> fastmap       NA            NA                                              #> fitAutoReg    NA            \"R (>= 3.5.0)\"                                  #> fontawesome   NA            \"R (>= 3.3.0)\"                                  #> fs            NA            \"R (>= 3.4)\"                                    #> glue          NA            \"R (>= 3.4)\"                                    #> highr         NA            \"R (>= 3.3.0)\"                                  #> htmltools     NA            \"R (>= 2.14.1)\"                                 #> httr          NA            \"R (>= 3.5)\"                                    #> jquerylib     NA            NA                                              #> jsonlite      NA            \"methods\"                                       #> knitr         NA            \"R (>= 3.3.0)\"                                  #> lifecycle     NA            \"R (>= 3.4)\"                                    #> magrittr      NA            \"R (>= 3.4.0)\"                                  #> memoise       NA            NA                                              #> mime          NA            NA                                              #> openssl       NA            NA                                              #> pillar        NA            NA                                              #> pkgconfig     NA            NA                                              #> pkgdown       NA            \"R (>= 3.1.0)\"                                  #> pkgload       NA            \"R (>= 3.4.0)\"                                  #> praise        NA            NA                                              #> processx      NA            \"R (>= 3.4.0)\"                                  #> ps            NA            \"R (>= 3.4)\"                                    #> purrr         NA            \"R (>= 3.4.0)\"                                  #> R6            NA            \"R (>= 3.0)\"                                    #> ragg          NA            NA                                              #> rappdirs      NA            \"R (>= 3.2)\"                                    #> Rcpp          NA            NA                                              #> RcppArmadillo NA            \"R (>= 3.3.0)\"                                  #> rematch2      NA            NA                                              #> rlang         NA            \"R (>= 3.5.0)\"                                  #> rmarkdown     NA            \"R (>= 3.0)\"                                    #> rprojroot     NA            \"R (>= 3.0.0)\"                                  #> sass          NA            NA                                              #> sessioninfo   NA            \"R (>= 2.10)\"                                   #> stringi       NA            \"R (>= 3.1)\"                                    #> stringr       NA            \"R (>= 3.3)\"                                    #> sys           NA            NA                                              #> systemfonts   NA            \"R (>= 3.2.0)\"                                  #> testthat      NA            \"R (>= 3.1)\"                                    #> textshaping   NA            \"R (>= 3.2.0)\"                                  #> tibble        NA            \"R (>= 3.4.0)\"                                  #> tinytex       NA            NA                                              #> utf8          NA            \"R (>= 2.10)\"                                   #> vctrs         NA            \"R (>= 3.5.0)\"                                  #> waldo         NA            NA                                              #> whisker       NA            NA                                              #> withr         NA            \"R (>= 3.2.0)\"                                  #> xfun          NA            NA                                              #> xml2          NA            \"R (>= 3.1.0)\"                                  #> yaml          NA            NA                                              #> pak           NA            \"R (>= 3.2)\"                                    #> base          \"base\"        NA                                              #> boot          \"recommended\" \"R (>= 3.0.0), graphics, stats\"                 #> class         \"recommended\" \"R (>= 3.0.0), stats, utils\"                    #> cluster       \"recommended\" \"R (>= 3.5.0)\"                                  #> codetools     \"recommended\" \"R (>= 2.1)\"                                    #> compiler      \"base\"        NA                                              #> datasets      \"base\"        NA                                              #> foreign       \"recommended\" \"R (>= 4.0.0)\"                                  #> graphics      \"base\"        NA                                              #> grDevices     \"base\"        NA                                              #> grid          \"base\"        NA                                              #> KernSmooth    \"recommended\" \"R (>= 2.5.0), stats\"                           #> lattice       \"recommended\" \"R (>= 4.0.0)\"                                  #> MASS          \"recommended\" \"R (>= 4.0), grDevices, graphics, stats, utils\" #> Matrix        \"recommended\" \"R (>= 3.5.0), methods\"                         #> methods       \"base\"        NA                                              #> mgcv          \"recommended\" \"R (>= 3.6.0), nlme (>= 3.1-64)\"                #> nlme          \"recommended\" \"R (>= 3.5.0)\"                                  #> nnet          \"recommended\" \"R (>= 3.0.0), stats, utils\"                    #> parallel      \"base\"        NA                                              #> rpart         \"recommended\" \"R (>= 2.15.0), graphics, stats, grDevices\"     #> spatial       \"recommended\" \"R (>= 3.0.0), graphics, stats, utils\"          #> splines       \"base\"        NA                                              #> stats         \"base\"        NA                                              #> stats4        \"base\"        NA                                              #> survival      \"recommended\" \"R (>= 3.5.0)\"                                  #> tcltk         \"base\"        NA                                              #> tools         \"base\"        NA                                              #> utils         \"base\"        NA                                              #>               Imports                                                                                                                                                                                                                                                                       #> askpass       \"sys (>= 2.1)\"                                                                                                                                                                                                                                                                #> base64enc     NA                                                                                                                                                                                                                                                                            #> brio          NA                                                                                                                                                                                                                                                                            #> bslib         \"base64enc, cachem, grDevices, htmltools (>= 0.5.4), jquerylib\\n(>= 0.1.3), jsonlite, memoise (>= 2.0.1), mime, rlang, sass (>=\\n0.4.0)\"                                                                                                                                      #> cachem        \"rlang, fastmap (>= 1.1.1)\"                                                                                                                                                                                                                                                   #> callr         \"processx (>= 3.6.1), R6, utils\"                                                                                                                                                                                                                                              #> cli           \"utils\"                                                                                                                                                                                                                                                                       #> crayon        \"grDevices, methods, utils\"                                                                                                                                                                                                                                                   #> curl          NA                                                                                                                                                                                                                                                                            #> desc          \"cli, R6, rprojroot, utils\"                                                                                                                                                                                                                                                   #> diffobj       \"crayon (>= 1.3.2), tools, methods, utils, stats\"                                                                                                                                                                                                                             #> digest        \"utils\"                                                                                                                                                                                                                                                                       #> downlit       \"brio, desc, digest, evaluate, fansi, memoise, rlang, vctrs,\\nwithr, yaml\"                                                                                                                                                                                                    #> ellipsis      \"rlang (>= 0.3.0)\"                                                                                                                                                                                                                                                            #> evaluate      \"methods\"                                                                                                                                                                                                                                                                     #> fansi         \"grDevices, utils\"                                                                                                                                                                                                                                                            #> fastmap       NA                                                                                                                                                                                                                                                                            #> fitAutoReg    \"Rcpp\"                                                                                                                                                                                                                                                                        #> fontawesome   \"rlang (>= 1.0.6), htmltools (>= 0.5.1.1)\"                                                                                                                                                                                                                                    #> fs            \"methods\"                                                                                                                                                                                                                                                                     #> glue          \"methods\"                                                                                                                                                                                                                                                                     #> highr         \"xfun (>= 0.18)\"                                                                                                                                                                                                                                                              #> htmltools     \"utils, digest, grDevices, base64enc, rlang (>= 0.4.10),\\nfastmap (>= 1.1.0), ellipsis\"                                                                                                                                                                                       #> httr          \"curl (>= 3.0.0), jsonlite, mime, openssl (>= 0.8), R6\"                                                                                                                                                                                                                       #> jquerylib     \"htmltools\"                                                                                                                                                                                                                                                                   #> jsonlite      NA                                                                                                                                                                                                                                                                            #> knitr         \"evaluate (>= 0.15), highr, methods, tools, xfun (>= 0.39),\\nyaml (>= 2.1.19)\"                                                                                                                                                                                                #> lifecycle     \"cli (>= 3.4.0), glue, rlang (>= 1.0.6)\"                                                                                                                                                                                                                                      #> magrittr      NA                                                                                                                                                                                                                                                                            #> memoise       \"rlang (>= 0.4.10), cachem\"                                                                                                                                                                                                                                                   #> mime          \"tools\"                                                                                                                                                                                                                                                                       #> openssl       \"askpass\"                                                                                                                                                                                                                                                                     #> pillar        \"cli (>= 2.3.0), fansi, glue, lifecycle, rlang (>= 1.0.2), utf8\\n(>= 1.1.0), utils, vctrs (>= 0.5.0)\"                                                                                                                                                                         #> pkgconfig     \"utils\"                                                                                                                                                                                                                                                                       #> pkgdown       \"bslib (>= 0.3.1), callr (>= 3.7.3), cli, desc, digest, downlit\\n(>= 0.4.0), fs (>= 1.4.0), httr (>= 1.4.2), jsonlite, magrittr,\\nmemoise, purrr, ragg, rlang (>= 1.0.0), rmarkdown (>=\\n1.1.9007), tibble, whisker, withr (>= 2.4.3), xml2 (>= 1.3.1),\\nyaml\"                #> pkgload       \"cli (>= 3.3.0), crayon, desc, fs, glue, methods, rlang (>=\\n1.0.3), rprojroot, utils, withr (>= 2.4.3)\"                                                                                                                                                                      #> praise        NA                                                                                                                                                                                                                                                                            #> processx      \"ps (>= 1.2.0), R6, utils\"                                                                                                                                                                                                                                                    #> ps            \"utils\"                                                                                                                                                                                                                                                                       #> purrr         \"cli (>= 3.4.0), lifecycle (>= 1.0.3), magrittr (>= 1.5.0),\\nrlang (>= 0.4.10), vctrs (>= 0.5.0)\"                                                                                                                                                                             #> R6            NA                                                                                                                                                                                                                                                                            #> ragg          \"systemfonts (>= 1.0.3), textshaping (>= 0.3.0)\"                                                                                                                                                                                                                              #> rappdirs      NA                                                                                                                                                                                                                                                                            #> Rcpp          \"methods, utils\"                                                                                                                                                                                                                                                              #> RcppArmadillo \"Rcpp (>= 0.11.0), stats, utils, methods\"                                                                                                                                                                                                                                     #> rematch2      \"tibble\"                                                                                                                                                                                                                                                                      #> rlang         \"utils\"                                                                                                                                                                                                                                                                       #> rmarkdown     \"bslib (>= 0.2.5.1), evaluate (>= 0.13), fontawesome (>=\\n0.5.0), htmltools (>= 0.5.1), jquerylib, jsonlite, knitr (>=\\n1.22), methods, stringr (>= 1.2.0), tinytex (>= 0.31), tools,\\nutils, xfun (>= 0.36), yaml (>= 2.1.19)\"                                               #> rprojroot     NA                                                                                                                                                                                                                                                                            #> sass          \"fs (>= 1.2.4), rlang (>= 0.4.10), htmltools (>= 0.5.1), R6,\\nrappdirs\"                                                                                                                                                                                                       #> sessioninfo   \"cli (>= 3.1.0), tools, utils\"                                                                                                                                                                                                                                                #> stringi       \"tools, utils, stats\"                                                                                                                                                                                                                                                         #> stringr       \"cli, glue (>= 1.6.1), lifecycle (>= 1.0.3), magrittr, rlang\\n(>= 1.0.0), stringi (>= 1.5.3), vctrs\"                                                                                                                                                                          #> sys           NA                                                                                                                                                                                                                                                                            #> systemfonts   NA                                                                                                                                                                                                                                                                            #> testthat      \"brio, callr (>= 3.5.1), cli (>= 3.4.0), desc, digest, ellipsis\\n(>= 0.2.0), evaluate, jsonlite, lifecycle, magrittr, methods,\\npkgload (>= 1.3.0), praise, processx (>= 3.8.2), ps (>= 1.3.4),\\nR6 (>= 2.2.0), rlang (>= 1.1.0), utils, waldo (>= 0.5.0), withr\\n(>= 2.4.3)\" #> textshaping   \"systemfonts (>= 1.0.0)\"                                                                                                                                                                                                                                                      #> tibble        \"fansi (>= 0.4.0), lifecycle (>= 1.0.0), magrittr, methods,\\npillar (>= 1.8.1), pkgconfig, rlang (>= 1.0.2), utils, vctrs\\n(>= 0.4.2)\"                                                                                                                                        #> tinytex       \"xfun (>= 0.29)\"                                                                                                                                                                                                                                                              #> utf8          NA                                                                                                                                                                                                                                                                            #> vctrs         \"cli (>= 3.4.0), glue, lifecycle (>= 1.0.3), rlang (>= 1.1.0)\"                                                                                                                                                                                                                #> waldo         \"cli, diffobj (>= 0.3.4), fansi, glue, methods, rematch2, rlang\\n(>= 1.0.0), tibble\"                                                                                                                                                                                          #> whisker       NA                                                                                                                                                                                                                                                                            #> withr         \"graphics, grDevices, stats\"                                                                                                                                                                                                                                                  #> xfun          \"stats, tools\"                                                                                                                                                                                                                                                                #> xml2          \"methods\"                                                                                                                                                                                                                                                                     #> yaml          NA                                                                                                                                                                                                                                                                            #> pak           \"tools,\\nutils\"                                                                                                                                                                                                                                                               #> base          NA                                                                                                                                                                                                                                                                            #> boot          NA                                                                                                                                                                                                                                                                            #> class         \"MASS\"                                                                                                                                                                                                                                                                        #> cluster       \"graphics, grDevices, stats, utils\"                                                                                                                                                                                                                                           #> codetools     NA                                                                                                                                                                                                                                                                            #> compiler      NA                                                                                                                                                                                                                                                                            #> datasets      NA                                                                                                                                                                                                                                                                            #> foreign       \"methods, utils, stats\"                                                                                                                                                                                                                                                       #> graphics      \"grDevices\"                                                                                                                                                                                                                                                                   #> grDevices     NA                                                                                                                                                                                                                                                                            #> grid          \"grDevices, utils\"                                                                                                                                                                                                                                                            #> KernSmooth    NA                                                                                                                                                                                                                                                                            #> lattice       \"grid, grDevices, graphics, stats, utils\"                                                                                                                                                                                                                                     #> MASS          \"methods\"                                                                                                                                                                                                                                                                     #> Matrix        \"graphics, grid, lattice, stats, utils\"                                                                                                                                                                                                                                       #> methods       \"utils, stats\"                                                                                                                                                                                                                                                                #> mgcv          \"methods, stats, graphics, Matrix, splines, utils\"                                                                                                                                                                                                                            #> nlme          \"graphics, stats, utils, lattice\"                                                                                                                                                                                                                                             #> nnet          NA                                                                                                                                                                                                                                                                            #> parallel      \"tools, compiler\"                                                                                                                                                                                                                                                             #> rpart         NA                                                                                                                                                                                                                                                                            #> spatial       NA                                                                                                                                                                                                                                                                            #> splines       \"graphics, stats\"                                                                                                                                                                                                                                                             #> stats         \"utils, grDevices, graphics\"                                                                                                                                                                                                                                                  #> stats4        \"graphics, methods, stats\"                                                                                                                                                                                                                                                    #> survival      \"graphics, Matrix, methods, splines, stats, utils\"                                                                                                                                                                                                                            #> tcltk         \"utils\"                                                                                                                                                                                                                                                                       #> tools         NA                                                                                                                                                                                                                                                                            #> utils         NA                                                                                                                                                                                                                                                                            #>               LinkingTo                                  #> askpass       NA                                         #> base64enc     NA                                         #> brio          NA                                         #> bslib         NA                                         #> cachem        NA                                         #> callr         NA                                         #> cli           NA                                         #> crayon        NA                                         #> curl          NA                                         #> desc          NA                                         #> diffobj       NA                                         #> digest        NA                                         #> downlit       NA                                         #> ellipsis      NA                                         #> evaluate      NA                                         #> fansi         NA                                         #> fastmap       NA                                         #> fitAutoReg    \"Rcpp, RcppArmadillo\"                      #> fontawesome   NA                                         #> fs            NA                                         #> glue          NA                                         #> highr         NA                                         #> htmltools     NA                                         #> httr          NA                                         #> jquerylib     NA                                         #> jsonlite      NA                                         #> knitr         NA                                         #> lifecycle     NA                                         #> magrittr      NA                                         #> memoise       NA                                         #> mime          NA                                         #> openssl       NA                                         #> pillar        NA                                         #> pkgconfig     NA                                         #> pkgdown       NA                                         #> pkgload       NA                                         #> praise        NA                                         #> processx      NA                                         #> ps            NA                                         #> purrr         \"cli\"                                      #> R6            NA                                         #> ragg          \"systemfonts, textshaping\"                 #> rappdirs      NA                                         #> Rcpp          NA                                         #> RcppArmadillo \"Rcpp\"                                     #> rematch2      NA                                         #> rlang         NA                                         #> rmarkdown     NA                                         #> rprojroot     NA                                         #> sass          NA                                         #> sessioninfo   NA                                         #> stringi       NA                                         #> stringr       NA                                         #> sys           NA                                         #> systemfonts   \"cpp11 (>= 0.2.1)\"                         #> testthat      NA                                         #> textshaping   \"cpp11 (>= 0.2.1), systemfonts (>= 1.0.0)\" #> tibble        NA                                         #> tinytex       NA                                         #> utf8          NA                                         #> vctrs         NA                                         #> waldo         NA                                         #> whisker       NA                                         #> withr         NA                                         #> xfun          NA                                         #> xml2          NA                                         #> yaml          NA                                         #> pak           NA                                         #> base          NA                                         #> boot          NA                                         #> class         NA                                         #> cluster       NA                                         #> codetools     NA                                         #> compiler      NA                                         #> datasets      NA                                         #> foreign       NA                                         #> graphics      NA                                         #> grDevices     NA                                         #> grid          NA                                         #> KernSmooth    NA                                         #> lattice       NA                                         #> MASS          NA                                         #> Matrix        NA                                         #> methods       NA                                         #> mgcv          NA                                         #> nlme          NA                                         #> nnet          NA                                         #> parallel      NA                                         #> rpart         NA                                         #> spatial       NA                                         #> splines       NA                                         #> stats         NA                                         #> stats4        NA                                         #> survival      NA                                         #> tcltk         NA                                         #> tools         NA                                         #> utils         NA                                         #>               Suggests                                                                                                                                                                                                                                                                                                                                                                         #> askpass       \"testthat\"                                                                                                                                                                                                                                                                                                                                                                       #> base64enc     NA                                                                                                                                                                                                                                                                                                                                                                               #> brio          \"covr, testthat (>= 2.1.0)\"                                                                                                                                                                                                                                                                                                                                                      #> bslib         \"bsicons, curl, fontawesome, ggplot2, knitr, magrittr,\\nrappdirs, rmarkdown (>= 2.7), shiny (>= 1.6.0), testthat,\\nthematic, withr\"                                                                                                                                                                                                                                              #> cachem        \"testthat\"                                                                                                                                                                                                                                                                                                                                                                       #> callr         \"asciicast, cli (>= 1.1.0), covr, mockery, ps, rprojroot,\\nspelling, testthat (>= 3.0.0), withr (>= 2.3.0)\"                                                                                                                                                                                                                                                                      #> cli           \"callr, covr, crayon, digest, glue (>= 1.6.0), grDevices,\\nhtmltools, htmlwidgets, knitr, methods, mockery, processx, ps\\n(>= 1.3.4.9000), rlang (>= 1.0.2.9003), rmarkdown, rprojroot,\\nrstudioapi, testthat, tibble, whoami, withr\"                                                                                                                                            #> crayon        \"mockery, rstudioapi, testthat, withr\"                                                                                                                                                                                                                                                                                                                                           #> curl          \"spelling, testthat (>= 1.0.0), knitr, jsonlite, rmarkdown,\\nmagrittr, httpuv (>= 1.4.4), webutils\"                                                                                                                                                                                                                                                                              #> desc          \"callr, covr, gh, spelling, testthat, whoami, withr\"                                                                                                                                                                                                                                                                                                                             #> diffobj       \"knitr, rmarkdown\"                                                                                                                                                                                                                                                                                                                                                               #> digest        \"tinytest, simplermarkdown\"                                                                                                                                                                                                                                                                                                                                                      #> downlit       \"covr, htmltools, jsonlite, MASS, MassSpecWavelet, pkgload,\\nrmarkdown, testthat (>= 3.0.0), xml2\"                                                                                                                                                                                                                                                                               #> ellipsis      \"covr, testthat\"                                                                                                                                                                                                                                                                                                                                                                 #> evaluate      \"covr, ggplot2, lattice, rlang, testthat (>= 3.0.0), withr\"                                                                                                                                                                                                                                                                                                                      #> fansi         \"unitizer, knitr, rmarkdown\"                                                                                                                                                                                                                                                                                                                                                     #> fastmap       \"testthat (>= 2.1.1)\"                                                                                                                                                                                                                                                                                                                                                            #> fitAutoReg    \"knitr, rmarkdown, testthat\"                                                                                                                                                                                                                                                                                                                                                     #> fontawesome   \"covr, dplyr (>= 1.0.8), knitr (>= 1.31), testthat (>= 3.0.0),\\nrsvg\"                                                                                                                                                                                                                                                                                                            #> fs            \"covr, crayon, knitr, pillar (>= 1.0.0), rmarkdown, spelling,\\ntestthat (>= 3.0.0), tibble (>= 1.1.0), vctrs (>= 0.3.0), withr\"                                                                                                                                                                                                                                                  #> glue          \"covr, crayon, DBI, dplyr, forcats, ggplot2, knitr, magrittr,\\nmicrobenchmark, R.utils, rmarkdown, rprintf, RSQLite, stringr,\\ntestthat (>= 3.0.0), vctrs (>= 0.3.0), waldo (>= 0.3.0), withr\"                                                                                                                                                                                   #> highr         \"knitr, markdown, testit\"                                                                                                                                                                                                                                                                                                                                                        #> htmltools     \"markdown, testthat, withr, Cairo, ragg, shiny\"                                                                                                                                                                                                                                                                                                                                  #> httr          \"covr, httpuv, jpeg, knitr, png, readr, rmarkdown, testthat\\n(>= 0.8.0), xml2\"                                                                                                                                                                                                                                                                                                   #> jquerylib     \"testthat\"                                                                                                                                                                                                                                                                                                                                                                       #> jsonlite      \"httr, vctrs, testthat, knitr, rmarkdown, R.rsp, sf\"                                                                                                                                                                                                                                                                                                                             #> knitr         \"bslib, codetools, DBI (>= 0.4-1), digest, formatR, gifski,\\ngridSVG, htmlwidgets (>= 0.7), curl, jpeg, JuliaCall (>=\\n0.11.1), magick, markdown (>= 1.3), png, ragg, reticulate (>=\\n1.4), rgl (>= 0.95.1201), rlang, rmarkdown, sass, showtext,\\nstyler (>= 1.2.0), targets (>= 0.6.0), testit, tibble,\\ntikzDevice (>= 0.10), tinytex, webshot, rstudioapi, xml2 (>=\\n1.2.0)\" #> lifecycle     \"covr, crayon, knitr, lintr, rmarkdown, testthat (>= 3.0.1),\\ntibble, tidyverse, tools, vctrs, withr\"                                                                                                                                                                                                                                                                            #> magrittr      \"covr, knitr, rlang, rmarkdown, testthat\"                                                                                                                                                                                                                                                                                                                                        #> memoise       \"digest, aws.s3, covr, googleAuthR, googleCloudStorageR, httr,\\ntestthat\"                                                                                                                                                                                                                                                                                                        #> mime          NA                                                                                                                                                                                                                                                                                                                                                                               #> openssl       \"curl, testthat (>= 2.1.0), digest, knitr, rmarkdown,\\njsonlite, jose, sodium\"                                                                                                                                                                                                                                                                                                   #> pillar        \"bit64, DBI, debugme, DiagrammeR, dplyr, formattable, ggplot2,\\nknitr, lubridate, nanotime, nycflights13, palmerpenguins,\\nrmarkdown, scales, stringi, survival, testthat (>= 3.1.1),\\ntibble, units (>= 0.7.2), vdiffr, withr\"                                                                                                                                                  #> pkgconfig     \"covr, testthat, disposables (>= 1.0.3)\"                                                                                                                                                                                                                                                                                                                                         #> pkgdown       \"covr, diffviewer, evaluate, htmltools, htmlwidgets, knitr,\\nlifecycle, methods, openssl, pkgload (>= 1.0.2), rsconnect,\\nrstudioapi, rticles, sass, testthat (>= 3.1.3), tools\"                                                                                                                                                                                                 #> pkgload       \"bitops, covr, mathjaxr, mockr, pak, pkgbuild, Rcpp, remotes,\\nrstudioapi, testthat (>= 3.1.0)\"                                                                                                                                                                                                                                                                                  #> praise        \"testthat\"                                                                                                                                                                                                                                                                                                                                                                       #> processx      \"callr (>= 3.7.3), cli (>= 3.3.0), codetools, covr, curl,\\ndebugme, parallel, rlang (>= 1.0.2), testthat (>= 3.0.0),\\nwebfakes, withr\"                                                                                                                                                                                                                                           #> ps            \"callr, covr, curl, pillar, pingr, processx (>= 3.1.0), R6,\\nrlang, testthat (>= 3.0.0), webfakes\"                                                                                                                                                                                                                                                                               #> purrr         \"covr, dplyr (>= 0.7.8), httr, knitr, lubridate, rmarkdown,\\ntestthat (>= 3.0.0), tibble, tidyselect\"                                                                                                                                                                                                                                                                            #> R6            \"testthat, pryr\"                                                                                                                                                                                                                                                                                                                                                                 #> ragg          \"covr, graphics, grid, testthat\"                                                                                                                                                                                                                                                                                                                                                 #> rappdirs      \"roxygen2, testthat (>= 3.0.0), covr, withr\"                                                                                                                                                                                                                                                                                                                                     #> Rcpp          \"tinytest, inline, rbenchmark, pkgKitten (>= 0.1.2)\"                                                                                                                                                                                                                                                                                                                             #> RcppArmadillo \"tinytest, Matrix (>= 1.3.0), pkgKitten, reticulate, slam\"                                                                                                                                                                                                                                                                                                                       #> rematch2      \"covr, testthat\"                                                                                                                                                                                                                                                                                                                                                                 #> rlang         \"cli (>= 3.1.0), covr, crayon, fs, glue, knitr, magrittr,\\nmethods, pillar, rmarkdown, stats, testthat (>= 3.0.0), tibble,\\nusethis, vctrs (>= 0.2.3), withr\"                                                                                                                                                                                                                    #> rmarkdown     \"digest, dygraphs, fs, rsconnect, downlit (>= 0.4.0), katex\\n(>= 1.4.0), sass (>= 0.4.0), shiny (>= 1.6.0), testthat (>=\\n3.0.3), tibble, vctrs, cleanrmd, withr (>= 2.4.2)\"                                                                                                                                                                                                     #> rprojroot     \"covr, knitr, lifecycle, mockr, rmarkdown, testthat (>=\\n3.0.0), withr\"                                                                                                                                                                                                                                                                                                          #> sass          \"testthat, knitr, rmarkdown, withr, shiny, curl\"                                                                                                                                                                                                                                                                                                                                 #> sessioninfo   \"callr, covr, mockery, reticulate, rmarkdown, testthat, withr\"                                                                                                                                                                                                                                                                                                                   #> stringi       NA                                                                                                                                                                                                                                                                                                                                                                               #> stringr       \"covr, htmltools, htmlwidgets, knitr, rmarkdown, testthat (>=\\n3.0.0)\"                                                                                                                                                                                                                                                                                                           #> sys           \"unix (>= 1.4), spelling, testthat\"                                                                                                                                                                                                                                                                                                                                              #> systemfonts   \"testthat (>= 2.1.0), covr, knitr, rmarkdown, tools\"                                                                                                                                                                                                                                                                                                                             #> testthat      \"covr, curl (>= 0.9.5), diffviewer (>= 0.1.0), knitr,\\nrmarkdown, rstudioapi, shiny, usethis, vctrs (>= 0.1.0), xml2\"                                                                                                                                                                                                                                                            #> textshaping   \"covr, knitr, rmarkdown\"                                                                                                                                                                                                                                                                                                                                                         #> tibble        \"bench, bit64, blob, brio, callr, cli, covr, crayon (>=\\n1.3.4), DiagrammeR, dplyr, evaluate, formattable, ggplot2,\\nhere, hms, htmltools, knitr, lubridate, mockr, nycflights13,\\npkgbuild, pkgload, purrr, rmarkdown, stringi, testthat (>=\\n3.0.2), tidyr, withr\"                                                                                                             #> tinytex       \"testit, rstudioapi\"                                                                                                                                                                                                                                                                                                                                                             #> utf8          \"cli, covr, knitr, rlang, rmarkdown, testthat (>= 3.0.0),\\nwithr\"                                                                                                                                                                                                                                                                                                                #> vctrs         \"bit64, covr, crayon, dplyr (>= 0.8.5), generics, knitr,\\npillar (>= 1.4.4), pkgdown (>= 2.0.1), rmarkdown, testthat (>=\\n3.0.0), tibble (>= 3.1.3), waldo (>= 0.2.0), withr, xml2,\\nzeallot\"                                                                                                                                                                                    #> waldo         \"covr, R6, testthat (>= 3.0.0), withr, xml2\"                                                                                                                                                                                                                                                                                                                                     #> whisker       \"markdown\"                                                                                                                                                                                                                                                                                                                                                                       #> withr         \"callr, covr, DBI, knitr, lattice, methods, rlang, rmarkdown\\n(>= 2.12), RSQLite, testthat (>= 3.0.0)\"                                                                                                                                                                                                                                                                           #> xfun          \"testit, parallel, codetools, rstudioapi, tinytex (>= 0.30),\\nmime, markdown (>= 1.5), knitr (>= 1.42), htmltools, remotes,\\npak, rhub, renv, curl, jsonlite, magick, yaml, rmarkdown\"                                                                                                                                                                                           #> xml2          \"covr, curl, httr, knitr, magrittr, mockery, rmarkdown,\\ntestthat (>= 2.1.0)\"                                                                                                                                                                                                                                                                                                    #> yaml          \"RUnit\"                                                                                                                                                                                                                                                                                                                                                                          #> pak           \"callr (>= 3.7.0),\\ncli (>= 3.2.0),\\ncovr,\\ncurl (>= 4.3.2),\\ndesc (>= 1.4.1),\\ndigest,\\ndistro,\\nfilelock (>= 1.0.2),\\ngitcreds,\\nglue (>= 1.6.2),\\nmockery,\\npingr,\\njsonlite (>= 1.8.0),\\npkgcache (>= 2.0.4),\\npkgdepends (>= 0.4.0),\\npkgsearch (>= 3.1.0),\\nprettyunits,\\nprocessx (>= 3.8.1),\\nps (>= 1.6.0),\\nrprojroot (>= 2.0.2),\\nrstudioapi,\\ntestthat,\\nwithr\"      #> base          \"methods\"                                                                                                                                                                                                                                                                                                                                                                        #> boot          \"MASS, survival\"                                                                                                                                                                                                                                                                                                                                                                 #> class         NA                                                                                                                                                                                                                                                                                                                                                                               #> cluster       \"MASS, Matrix\"                                                                                                                                                                                                                                                                                                                                                                   #> codetools     NA                                                                                                                                                                                                                                                                                                                                                                               #> compiler      NA                                                                                                                                                                                                                                                                                                                                                                               #> datasets      NA                                                                                                                                                                                                                                                                                                                                                                               #> foreign       NA                                                                                                                                                                                                                                                                                                                                                                               #> graphics      NA                                                                                                                                                                                                                                                                                                                                                                               #> grDevices     \"KernSmooth\"                                                                                                                                                                                                                                                                                                                                                                     #> grid          NA                                                                                                                                                                                                                                                                                                                                                                               #> KernSmooth    \"MASS, carData\"                                                                                                                                                                                                                                                                                                                                                                  #> lattice       \"KernSmooth, MASS, latticeExtra, colorspace\"                                                                                                                                                                                                                                                                                                                                     #> MASS          \"lattice, nlme, nnet, survival\"                                                                                                                                                                                                                                                                                                                                                  #> Matrix        \"MASS, expm\"                                                                                                                                                                                                                                                                                                                                                                     #> methods       \"codetools\"                                                                                                                                                                                                                                                                                                                                                                      #> mgcv          \"parallel, survival, MASS\"                                                                                                                                                                                                                                                                                                                                                       #> nlme          \"Hmisc, MASS, SASmixed\"                                                                                                                                                                                                                                                                                                                                                          #> nnet          \"MASS\"                                                                                                                                                                                                                                                                                                                                                                           #> parallel      \"methods\"                                                                                                                                                                                                                                                                                                                                                                        #> rpart         \"survival\"                                                                                                                                                                                                                                                                                                                                                                       #> spatial       \"MASS\"                                                                                                                                                                                                                                                                                                                                                                           #> splines       \"Matrix, methods\"                                                                                                                                                                                                                                                                                                                                                                #> stats         \"MASS, Matrix, SuppDists, methods, stats4\"                                                                                                                                                                                                                                                                                                                                       #> stats4        NA                                                                                                                                                                                                                                                                                                                                                                               #> survival      NA                                                                                                                                                                                                                                                                                                                                                                               #> tcltk         NA                                                                                                                                                                                                                                                                                                                                                                               #> tools         \"codetools, methods, xml2, curl, commonmark, knitr, xfun,\\nmathjaxr, V8\"                                                                                                                                                                                                                                                                                                         #> utils         \"methods, xml2, commonmark, knitr\"                                                                                                                                                                                                                                                                                                                                               #>               Enhances                                                              #> askpass       NA                                                                    #> base64enc     \"png\"                                                                 #> brio          NA                                                                    #> bslib         NA                                                                    #> cachem        NA                                                                    #> callr         NA                                                                    #> cli           NA                                                                    #> crayon        NA                                                                    #> curl          NA                                                                    #> desc          NA                                                                    #> diffobj       NA                                                                    #> digest        NA                                                                    #> downlit       NA                                                                    #> ellipsis      NA                                                                    #> evaluate      NA                                                                    #> fansi         NA                                                                    #> fastmap       NA                                                                    #> fitAutoReg    NA                                                                    #> fontawesome   NA                                                                    #> fs            NA                                                                    #> glue          NA                                                                    #> highr         NA                                                                    #> htmltools     \"knitr\"                                                               #> httr          NA                                                                    #> jquerylib     NA                                                                    #> jsonlite      NA                                                                    #> knitr         NA                                                                    #> lifecycle     NA                                                                    #> magrittr      NA                                                                    #> memoise       NA                                                                    #> mime          NA                                                                    #> openssl       NA                                                                    #> pillar        NA                                                                    #> pkgconfig     NA                                                                    #> pkgdown       NA                                                                    #> pkgload       NA                                                                    #> praise        NA                                                                    #> processx      NA                                                                    #> ps            NA                                                                    #> purrr         NA                                                                    #> R6            NA                                                                    #> ragg          NA                                                                    #> rappdirs      NA                                                                    #> Rcpp          NA                                                                    #> RcppArmadillo NA                                                                    #> rematch2      NA                                                                    #> rlang         \"winch\"                                                               #> rmarkdown     NA                                                                    #> rprojroot     NA                                                                    #> sass          NA                                                                    #> sessioninfo   NA                                                                    #> stringi       NA                                                                    #> stringr       NA                                                                    #> sys           NA                                                                    #> systemfonts   NA                                                                    #> testthat      NA                                                                    #> textshaping   NA                                                                    #> tibble        NA                                                                    #> tinytex       NA                                                                    #> utf8          NA                                                                    #> vctrs         NA                                                                    #> waldo         NA                                                                    #> whisker       NA                                                                    #> withr         NA                                                                    #> xfun          NA                                                                    #> xml2          NA                                                                    #> yaml          NA                                                                    #> pak           NA                                                                    #> base          NA                                                                    #> boot          NA                                                                    #> class         NA                                                                    #> cluster       NA                                                                    #> codetools     NA                                                                    #> compiler      NA                                                                    #> datasets      NA                                                                    #> foreign       NA                                                                    #> graphics      NA                                                                    #> grDevices     NA                                                                    #> grid          NA                                                                    #> KernSmooth    NA                                                                    #> lattice       \"chron\"                                                               #> MASS          NA                                                                    #> Matrix        \"MatrixModels, SparseM, graph, igraph, maptools, sfsmisc, sp,\\nspdep\" #> methods       NA                                                                    #> mgcv          NA                                                                    #> nlme          NA                                                                    #> nnet          NA                                                                    #> parallel      \"snow, Rmpi\"                                                          #> rpart         NA                                                                    #> spatial       NA                                                                    #> splines       NA                                                                    #> stats         NA                                                                    #> stats4        NA                                                                    #> survival      NA                                                                    #> tcltk         NA                                                                    #> tools         NA                                                                    #> utils         NA                                                                    #>               License                                  License_is_FOSS #> askpass       \"MIT + file LICENSE\"                     NA              #> base64enc     \"GPL-2 | GPL-3\"                          NA              #> brio          \"MIT + file LICENSE\"                     NA              #> bslib         \"MIT + file LICENSE\"                     NA              #> cachem        \"MIT + file LICENSE\"                     NA              #> callr         \"MIT + file LICENSE\"                     NA              #> cli           \"MIT + file LICENSE\"                     NA              #> crayon        \"MIT + file LICENSE\"                     NA              #> curl          \"MIT + file LICENSE\"                     NA              #> desc          \"MIT + file LICENSE\"                     NA              #> diffobj       \"GPL-2 | GPL-3\"                          NA              #> digest        \"GPL (>= 2)\"                             NA              #> downlit       \"MIT + file LICENSE\"                     NA              #> ellipsis      \"MIT + file LICENSE\"                     NA              #> evaluate      \"MIT + file LICENSE\"                     NA              #> fansi         \"GPL-2 | GPL-3\"                          NA              #> fastmap       \"MIT + file LICENSE\"                     NA              #> fitAutoReg    \"GPL (>= 3)\"                             NA              #> fontawesome   \"MIT + file LICENSE\"                     NA              #> fs            \"MIT + file LICENSE\"                     NA              #> glue          \"MIT + file LICENSE\"                     NA              #> highr         \"GPL\"                                    NA              #> htmltools     \"GPL (>= 2)\"                             NA              #> httr          \"MIT + file LICENSE\"                     NA              #> jquerylib     \"MIT + file LICENSE\"                     NA              #> jsonlite      \"MIT + file LICENSE\"                     NA              #> knitr         \"GPL\"                                    NA              #> lifecycle     \"MIT + file LICENSE\"                     NA              #> magrittr      \"MIT + file LICENSE\"                     NA              #> memoise       \"MIT + file LICENSE\"                     NA              #> mime          \"GPL\"                                    NA              #> openssl       \"MIT + file LICENSE\"                     NA              #> pillar        \"MIT + file LICENSE\"                     NA              #> pkgconfig     \"MIT + file LICENSE\"                     NA              #> pkgdown       \"MIT + file LICENSE\"                     NA              #> pkgload       \"GPL-3\"                                  NA              #> praise        \"MIT + file LICENSE\"                     NA              #> processx      \"MIT + file LICENSE\"                     NA              #> ps            \"MIT + file LICENSE\"                     NA              #> purrr         \"MIT + file LICENSE\"                     NA              #> R6            \"MIT + file LICENSE\"                     NA              #> ragg          \"MIT + file LICENSE\"                     NA              #> rappdirs      \"MIT + file LICENSE\"                     NA              #> Rcpp          \"GPL (>= 2)\"                             NA              #> RcppArmadillo \"GPL (>= 2)\"                             NA              #> rematch2      \"MIT + file LICENSE\"                     NA              #> rlang         \"MIT + file LICENSE\"                     NA              #> rmarkdown     \"GPL-3\"                                  NA              #> rprojroot     \"MIT + file LICENSE\"                     NA              #> sass          \"MIT + file LICENSE\"                     NA              #> sessioninfo   \"GPL-2\"                                  NA              #> stringi       \"file LICENSE\"                           \"yes\"           #> stringr       \"MIT + file LICENSE\"                     NA              #> sys           \"MIT + file LICENSE\"                     NA              #> systemfonts   \"MIT + file LICENSE\"                     NA              #> testthat      \"MIT + file LICENSE\"                     NA              #> textshaping   \"MIT + file LICENSE\"                     NA              #> tibble        \"MIT + file LICENSE\"                     NA              #> tinytex       \"MIT + file LICENSE\"                     NA              #> utf8          \"Apache License (== 2.0) | file LICENSE\" NA              #> vctrs         \"MIT + file LICENSE\"                     NA              #> waldo         \"MIT + file LICENSE\"                     NA              #> whisker       \"GPL-3\"                                  NA              #> withr         \"MIT + file LICENSE\"                     NA              #> xfun          \"MIT + file LICENSE\"                     NA              #> xml2          \"MIT + file LICENSE\"                     NA              #> yaml          \"BSD_3_clause + file LICENSE\"            NA              #> pak           \"GPL-3\"                                  NA              #> base          \"Part of R 4.3.1\"                        NA              #> boot          \"Unlimited\"                              NA              #> class         \"GPL-2 | GPL-3\"                          NA              #> cluster       \"GPL (>= 2)\"                             NA              #> codetools     \"GPL\"                                    NA              #> compiler      \"Part of R 4.3.1\"                        NA              #> datasets      \"Part of R 4.3.1\"                        NA              #> foreign       \"GPL (>= 2)\"                             NA              #> graphics      \"Part of R 4.3.1\"                        NA              #> grDevices     \"Part of R 4.3.1\"                        NA              #> grid          \"Part of R 4.3.1\"                        NA              #> KernSmooth    \"Unlimited\"                              NA              #> lattice       \"GPL (>= 2)\"                             NA              #> MASS          \"GPL-2 | GPL-3\"                          NA              #> Matrix        \"GPL (>= 2) | file LICENCE\"              NA              #> methods       \"Part of R 4.3.1\"                        NA              #> mgcv          \"GPL (>= 2)\"                             NA              #> nlme          \"GPL (>= 2)\"                             NA              #> nnet          \"GPL-2 | GPL-3\"                          NA              #> parallel      \"Part of R 4.3.1\"                        NA              #> rpart         \"GPL-2 | GPL-3\"                          NA              #> spatial       \"GPL-2 | GPL-3\"                          NA              #> splines       \"Part of R 4.3.1\"                        NA              #> stats         \"Part of R 4.3.1\"                        NA              #> stats4        \"Part of R 4.3.1\"                        NA              #> survival      \"LGPL (>= 2)\"                            NA              #> tcltk         \"Part of R 4.3.1\"                        NA              #> tools         \"Part of R 4.3.1\"                        NA              #> utils         \"Part of R 4.3.1\"                        NA              #>               License_restricts_use OS_type MD5sum NeedsCompilation Built   #> askpass       NA                    NA      NA     \"yes\"            \"4.3.0\" #> base64enc     NA                    NA      NA     \"yes\"            \"4.3.0\" #> brio          NA                    NA      NA     \"yes\"            \"4.3.0\" #> bslib         NA                    NA      NA     \"no\"             \"4.3.0\" #> cachem        NA                    NA      NA     \"yes\"            \"4.3.0\" #> callr         NA                    NA      NA     \"no\"             \"4.3.0\" #> cli           NA                    NA      NA     \"yes\"            \"4.3.0\" #> crayon        NA                    NA      NA     \"no\"             \"4.3.0\" #> curl          NA                    NA      NA     \"yes\"            \"4.3.0\" #> desc          NA                    NA      NA     \"no\"             \"4.3.0\" #> diffobj       NA                    NA      NA     \"yes\"            \"4.3.0\" #> digest        NA                    NA      NA     \"yes\"            \"4.3.0\" #> downlit       NA                    NA      NA     \"no\"             \"4.3.0\" #> ellipsis      NA                    NA      NA     \"yes\"            \"4.3.0\" #> evaluate      NA                    NA      NA     \"no\"             \"4.3.0\" #> fansi         NA                    NA      NA     \"yes\"            \"4.3.0\" #> fastmap       NA                    NA      NA     \"yes\"            \"4.3.0\" #> fitAutoReg    NA                    NA      NA     \"yes\"            \"4.3.1\" #> fontawesome   NA                    NA      NA     \"no\"             \"4.3.0\" #> fs            NA                    NA      NA     \"yes\"            \"4.3.0\" #> glue          NA                    NA      NA     \"yes\"            \"4.3.0\" #> highr         NA                    NA      NA     \"no\"             \"4.3.0\" #> htmltools     NA                    NA      NA     \"yes\"            \"4.3.0\" #> httr          NA                    NA      NA     \"no\"             \"4.3.0\" #> jquerylib     NA                    NA      NA     \"no\"             \"4.3.0\" #> jsonlite      NA                    NA      NA     \"yes\"            \"4.3.0\" #> knitr         NA                    NA      NA     \"no\"             \"4.3.0\" #> lifecycle     NA                    NA      NA     \"no\"             \"4.3.0\" #> magrittr      NA                    NA      NA     \"yes\"            \"4.3.0\" #> memoise       NA                    NA      NA     \"no\"             \"4.3.0\" #> mime          NA                    NA      NA     \"yes\"            \"4.3.0\" #> openssl       NA                    NA      NA     \"yes\"            \"4.3.0\" #> pillar        NA                    NA      NA     \"no\"             \"4.3.0\" #> pkgconfig     NA                    NA      NA     \"no\"             \"4.3.0\" #> pkgdown       NA                    NA      NA     \"no\"             \"4.3.0\" #> pkgload       NA                    NA      NA     \"no\"             \"4.3.0\" #> praise        NA                    NA      NA     \"no\"             \"4.3.0\" #> processx      NA                    NA      NA     \"yes\"            \"4.3.0\" #> ps            NA                    NA      NA     \"yes\"            \"4.3.0\" #> purrr         NA                    NA      NA     \"yes\"            \"4.3.0\" #> R6            NA                    NA      NA     \"no\"             \"4.3.0\" #> ragg          NA                    NA      NA     \"yes\"            \"4.3.0\" #> rappdirs      NA                    NA      NA     \"yes\"            \"4.3.0\" #> Rcpp          NA                    NA      NA     \"yes\"            \"4.3.0\" #> RcppArmadillo NA                    NA      NA     \"yes\"            \"4.3.0\" #> rematch2      NA                    NA      NA     \"no\"             \"4.3.0\" #> rlang         NA                    NA      NA     \"yes\"            \"4.3.0\" #> rmarkdown     NA                    NA      NA     \"no\"             \"4.3.0\" #> rprojroot     NA                    NA      NA     \"no\"             \"4.3.0\" #> sass          NA                    NA      NA     \"yes\"            \"4.3.0\" #> sessioninfo   NA                    NA      NA     \"no\"             \"4.3.0\" #> stringi       NA                    NA      NA     \"yes\"            \"4.3.0\" #> stringr       NA                    NA      NA     \"no\"             \"4.3.0\" #> sys           NA                    NA      NA     \"yes\"            \"4.3.0\" #> systemfonts   NA                    NA      NA     \"yes\"            \"4.3.0\" #> testthat      NA                    NA      NA     \"yes\"            \"4.3.0\" #> textshaping   NA                    NA      NA     \"yes\"            \"4.3.0\" #> tibble        NA                    NA      NA     \"yes\"            \"4.3.0\" #> tinytex       NA                    NA      NA     \"no\"             \"4.3.0\" #> utf8          NA                    NA      NA     \"yes\"            \"4.3.0\" #> vctrs         NA                    NA      NA     \"yes\"            \"4.3.0\" #> waldo         NA                    NA      NA     \"no\"             \"4.3.0\" #> whisker       NA                    NA      NA     \"no\"             \"4.3.0\" #> withr         NA                    NA      NA     \"no\"             \"4.3.0\" #> xfun          NA                    NA      NA     \"yes\"            \"4.3.0\" #> xml2          NA                    NA      NA     \"yes\"            \"4.3.0\" #> yaml          NA                    NA      NA     \"yes\"            \"4.3.0\" #> pak           NA                    NA      NA     NA               \"4.3.0\" #> base          NA                    NA      NA     NA               \"4.3.1\" #> boot          NA                    NA      NA     \"no\"             \"4.3.1\" #> class         NA                    NA      NA     \"yes\"            \"4.3.1\" #> cluster       NA                    NA      NA     \"yes\"            \"4.3.1\" #> codetools     NA                    NA      NA     \"no\"             \"4.3.1\" #> compiler      NA                    NA      NA     NA               \"4.3.1\" #> datasets      NA                    NA      NA     NA               \"4.3.1\" #> foreign       NA                    NA      NA     \"yes\"            \"4.3.1\" #> graphics      NA                    NA      NA     \"yes\"            \"4.3.1\" #> grDevices     NA                    NA      NA     \"yes\"            \"4.3.1\" #> grid          NA                    NA      NA     \"yes\"            \"4.3.1\" #> KernSmooth    NA                    NA      NA     \"yes\"            \"4.3.1\" #> lattice       NA                    NA      NA     \"yes\"            \"4.3.1\" #> MASS          NA                    NA      NA     \"yes\"            \"4.3.1\" #> Matrix        NA                    NA      NA     \"yes\"            \"4.3.1\" #> methods       NA                    NA      NA     \"yes\"            \"4.3.1\" #> mgcv          NA                    NA      NA     \"yes\"            \"4.3.1\" #> nlme          NA                    NA      NA     \"yes\"            \"4.3.1\" #> nnet          NA                    NA      NA     \"yes\"            \"4.3.1\" #> parallel      NA                    NA      NA     \"yes\"            \"4.3.1\" #> rpart         NA                    NA      NA     \"yes\"            \"4.3.1\" #> spatial       NA                    NA      NA     \"yes\"            \"4.3.1\" #> splines       NA                    NA      NA     \"yes\"            \"4.3.1\" #> stats         NA                    NA      NA     \"yes\"            \"4.3.1\" #> stats4        NA                    NA      NA     NA               \"4.3.1\" #> survival      NA                    NA      NA     \"yes\"            \"4.3.1\" #> tcltk         NA                    NA      NA     \"yes\"            \"4.3.1\" #> tools         NA                    NA      NA     \"yes\"            \"4.3.1\" #> utils         NA                    NA      NA     \"yes\"            \"4.3.1\""},{"path":"https://github.com/ijapesigan/fitAutoReg/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ivan Jacob Agaloos Pesigan. Author, maintainer, copyright holder.","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pesigan, . J. . (2023). fitAutoReg: Fit Autoregressive Models. R package version 0.9.1. https://github.com/ijapesigan/fitAutoReg","code":"@Manual{,   author = {Ivan Jacob Agaloos Pesigan},   title = {fitAutoReg: Fit Autoregressive Models},   year = {2023},   note = {R package version 0.9.1}, }"},{"path":"https://github.com/ijapesigan/fitAutoReg/index.html","id":"fitautoreg","dir":"","previous_headings":"","what":"Fit Autoregressive Models","title":"Fit Autoregressive Models","text":"Ivan Jacob Agaloos Pesigan 2023-08-05","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Fit Autoregressive Models","text":"Fit autoregressive models.","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Fit Autoregressive Models","text":"can install released version fitAutoReg GitHub :","code":"if (!require(\"remotes\")) install.packages(\"remotes\") remotes::install_github(\"ijapesigan/fitAutoReg\")"},{"path":"https://github.com/ijapesigan/fitAutoReg/index.html","id":"more-information","dir":"","previous_headings":"","what":"More Information","title":"Fit Autoregressive Models","text":"See GitHub Pages package documentation.","code":""},{"path":[]},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/FitVARLasso.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Vector Autoregressive (VAR) Model Parameters using Lasso Regularization — FitVARLasso","title":"Fit Vector Autoregressive (VAR) Model Parameters using Lasso Regularization — FitVARLasso","text":"function estimates parameters VAR model using Lasso regularization method cyclical coordinate descent. Lasso method used estimate autoregressive cross-regression coefficients sparsity.","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/FitVARLasso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Vector Autoregressive (VAR) Model Parameters using Lasso Regularization — FitVARLasso","text":"","code":"FitVARLasso(Ystd, Xstd, lambda, max_iter, tol)"},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/FitVARLasso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Vector Autoregressive (VAR) Model Parameters using Lasso Regularization — FitVARLasso","text":"Ystd Numeric matrix. Matrix standardized dependent variables (Y). Xstd Numeric matrix. Matrix standardized predictors (X). lambda Lasso hyperparameter. regularization strength controlling sparsity. max_iter Integer. maximum number iterations coordinate descent algorithm (e.g., max_iter = 10000). tol Numeric. Convergence tolerance. algorithm stops change coefficients iterations tolerance (e.g., tol = 1e-5).","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/FitVARLasso.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit Vector Autoregressive (VAR) Model Parameters using Lasso Regularization — FitVARLasso","text":"Matrix estimated autoregressive cross-regression coefficients.","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/FitVARLasso.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit Vector Autoregressive (VAR) Model Parameters using Lasso Regularization — FitVARLasso","text":"FitVARLasso() function estimates parameters Vector Autoregressive (VAR) model using Lasso regularization method. Given input matrices Ystd Xstd, Ystd matrix standardized dependent variables, Xstd matrix standardized predictors, function computes autoregressive cross-regression coefficients VAR model sparsity induced Lasso regularization. steps involved estimating VAR model parameters using Lasso follows: Initialization: function initializes coefficient matrix beta OLS estimates. beta matrix store estimated autoregressive cross-regression coefficients. Coordinate Descent Loop: function performs cyclical coordinate descent algorithm estimate coefficients iteratively. loop iterates max_iter times, convergence achieved. outer loop iterates predictor variables (columns Xstd), inner loop iterates outcome variables (columns Ystd). Coefficient Update: predictor variable (column Xstd), function iteratively updates corresponding column beta using coordinate descent algorithm L1 norm regularization (Lasso). update involves calculating soft-thresholded value c, encourages sparsity coefficients. algorithm continues change coefficients iterations specified tolerance tol maximum number iterations reached. Convergence Check: function checks convergence comparing current beta matrix previous iteration's beta_old. maximum absolute difference beta beta_old tolerance tol, algorithm considered converged, loop exits.","code":""},{"path":[]},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/FitVARLasso.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit Vector Autoregressive (VAR) Model Parameters using Lasso Regularization — FitVARLasso","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/FitVARLasso.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Vector Autoregressive (VAR) Model Parameters using Lasso Regularization — FitVARLasso","text":"","code":"Ystd <- StdMat(dat_demo_yx$Y) Xstd <- StdMat(dat_demo_yx$X[, -1]) lambda <- 73.90722 FitVARLasso(Ystd = Ystd, Xstd = Xstd, lambda = lambda,   max_iter = 10000, tol = 1e-5) #>           [,1]      [,2]      [,3]       [,4]      [,5]      [,6] #> [1,] 0.3440823 0.0000000 0.0000000 0.08601767 0.0000000 0.0000000 #> [2,] 0.0000000 0.4580172 0.0000000 0.00000000 0.2130337 0.0000000 #> [3,] 0.0000000 0.0000000 0.5889874 0.00000000 0.0000000 0.2746474"},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/FitVARLassoSearch.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Vector Autoregressive (VAR) Model Parameters using Lasso Regularization\nwith Lambda Search — FitVARLassoSearch","title":"Fit Vector Autoregressive (VAR) Model Parameters using Lasso Regularization\nwith Lambda Search — FitVARLassoSearch","text":"Fit Vector Autoregressive (VAR) Model Parameters using Lasso Regularization Lambda Search","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/FitVARLassoSearch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Vector Autoregressive (VAR) Model Parameters using Lasso Regularization\nwith Lambda Search — FitVARLassoSearch","text":"","code":"FitVARLassoSearch(Ystd, Xstd, lambdas, crit, max_iter, tol)"},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/FitVARLassoSearch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Vector Autoregressive (VAR) Model Parameters using Lasso Regularization\nwith Lambda Search — FitVARLassoSearch","text":"Ystd Numeric matrix. Matrix standardized dependent variables (Y). Xstd Numeric matrix. Matrix standardized predictors (X). lambdas Numeric vector. Vector lambda hyperparameters Lasso regularization. crit Character string. Information criteria use. Valid values include \"aic\", \"bic\", \"ebic\". max_iter Integer. maximum number iterations coordinate descent algorithm (e.g., max_iter = 10000). tol Numeric. Convergence tolerance. algorithm stops change coefficients iterations tolerance (e.g., tol = 1e-5).","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/FitVARLassoSearch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit Vector Autoregressive (VAR) Model Parameters using Lasso Regularization\nwith Lambda Search — FitVARLassoSearch","text":"Matrix estimated autoregressive cross-regression coefficients.","code":""},{"path":[]},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/FitVARLassoSearch.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit Vector Autoregressive (VAR) Model Parameters using Lasso Regularization\nwith Lambda Search — FitVARLassoSearch","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/FitVARLassoSearch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Vector Autoregressive (VAR) Model Parameters using Lasso Regularization\nwith Lambda Search — FitVARLassoSearch","text":"","code":"Ystd <- StdMat(dat_demo_yx$Y) Xstd <- StdMat(dat_demo_yx$X[, -1]) lambdas <- LambdaSeq(Y = Ystd, X = Xstd, n_lambdas = 100) FitVARLassoSearch(Ystd = Ystd, Xstd = Xstd, lambdas = lambdas,   crit = \"ebic\", max_iter = 1000, tol = 1e-5) #>           [,1]     [,2]     [,3]       [,4]      [,5]      [,6] #> [1,] 0.3429428 0.000000 0.000000 0.08487819 0.0000000 0.0000000 #> [2,] 0.0000000 0.457026 0.000000 0.00000000 0.2120426 0.0000000 #> [3,] 0.0000000 0.000000 0.588127 0.00000000 0.0000000 0.2737749"},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/FitVAROLS.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Vector Autoregressive (VAR) Model Parameters using OLS — FitVAROLS","title":"Fit Vector Autoregressive (VAR) Model Parameters using OLS — FitVAROLS","text":"function estimates parameters VAR model using Ordinary Least Squares (OLS) method. OLS method used estimate autoregressive cross-regression coefficients.","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/FitVAROLS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Vector Autoregressive (VAR) Model Parameters using OLS — FitVAROLS","text":"","code":"FitVAROLS(Y, X)"},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/FitVAROLS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Vector Autoregressive (VAR) Model Parameters using OLS — FitVAROLS","text":"Y Numeric matrix. Matrix dependent variables (Y). X Numeric matrix. Matrix predictors (X).","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/FitVAROLS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit Vector Autoregressive (VAR) Model Parameters using OLS — FitVAROLS","text":"Matrix estimated autoregressive cross-regression coefficients.","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/FitVAROLS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit Vector Autoregressive (VAR) Model Parameters using OLS — FitVAROLS","text":"FitVAROLS() function estimates parameters Vector Autoregressive (VAR) model using Ordinary Least Squares (OLS) method. Given input matrices Y X, Y matrix dependent variables, X matrix predictors, function computes autoregressive cross-regression coefficients VAR model. Note first column X vector ones, constant vector also estimated. steps involved estimating VAR model parameters using OLS follows: Compute QR decomposition lagged predictor matrix X using qr function Armadillo library. Extract Q R matrices QR decomposition. Solve linear system R * coef = Q.t() * Y estimate VAR model coefficients coef. function returns matrix containing estimated autoregressive cross-regression coefficients VAR model.","code":""},{"path":[]},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/FitVAROLS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit Vector Autoregressive (VAR) Model Parameters using OLS — FitVAROLS","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/FitVAROLS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Vector Autoregressive (VAR) Model Parameters using OLS — FitVAROLS","text":"","code":"Y <- dat_demo_yx$Y X <- dat_demo_yx$X FitVAROLS(Y = Y, X = X) #>           [,1]        [,2]        [,3]        [,4]        [,5]         [,6] #> [1,] 0.7899726  0.36836768 0.008539283  0.02231498  0.11338780  0.024505442 #> [2,] 1.0001995  0.01334496 0.481949237 -0.01730029 -0.03223315  0.234373552 #> [3,] 1.0666814 -0.03022951 0.014945306  0.60741736 -0.01610408 -0.006149189 #>             [,7] #> [1,] -0.01143384 #> [2,]  0.01815779 #> [3,]  0.29620975"},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/LambdaSeq.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to generate the sequence of lambdas — LambdaSeq","title":"Function to generate the sequence of lambdas — LambdaSeq","text":"Function generate sequence lambdas","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/LambdaSeq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to generate the sequence of lambdas — LambdaSeq","text":"","code":"LambdaSeq(Y, X, n_lambdas)"},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/LambdaSeq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to generate the sequence of lambdas — LambdaSeq","text":"Y Numeric matrix. Matrix dependent variables (Y). X Numeric matrix. Matrix predictors (X). n_lambdas Integer. Number lambdas generate.","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/LambdaSeq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to generate the sequence of lambdas — LambdaSeq","text":"Returns vector lambdas.","code":""},{"path":[]},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/LambdaSeq.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to generate the sequence of lambdas — LambdaSeq","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/LambdaSeq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to generate the sequence of lambdas — LambdaSeq","text":"","code":"Ystd <- StdMat(dat_demo_yx$Y) Xstd <- StdMat(dat_demo_yx$X[, -1]) LambdaSeq(Y = Ystd, X = Xstd, n_lambdas = 100) #>               [,1] #>   [1,] 166.1666667 #>   [2,] 154.9675895 #>   [3,] 144.5232926 #>   [4,] 134.7829064 #>   [5,] 125.6989896 #>   [6,] 117.2272984 #>   [7,] 109.3265708 #>   [8,] 101.9583259 #>   [9,]  95.0866759 #>  [10,]  88.6781522 #>  [11,]  82.7015416 #>  [12,]  77.1277345 #>  [13,]  71.9295833 #>  [14,]  67.0817701 #>  [15,]  62.5606833 #>  [16,]  58.3443027 #>  [17,]  54.4120919 #>  [18,]  50.7448990 #>  [19,]  47.3248627 #>  [20,]  44.1353253 #>  [21,]  41.1607521 #>  [22,]  38.3866552 #>  [23,]  35.7995231 #>  [24,]  33.3867551 #>  [25,]  31.1365995 #>  [26,]  29.0380969 #>  [27,]  27.0810264 #>  [28,]  25.2558558 #>  [29,]  23.5536957 #>  [30,]  21.9662554 #>  [31,]  20.4858033 #>  [32,]  19.1051287 #>  [33,]  17.8175070 #>  [34,]  16.6166667 #>  [35,]  15.4967589 #>  [36,]  14.4523293 #>  [37,]  13.4782906 #>  [38,]  12.5698990 #>  [39,]  11.7227298 #>  [40,]  10.9326571 #>  [41,]  10.1958326 #>  [42,]   9.5086676 #>  [43,]   8.8678152 #>  [44,]   8.2701542 #>  [45,]   7.7127734 #>  [46,]   7.1929583 #>  [47,]   6.7081770 #>  [48,]   6.2560683 #>  [49,]   5.8344303 #>  [50,]   5.4412092 #>  [51,]   5.0744899 #>  [52,]   4.7324863 #>  [53,]   4.4135325 #>  [54,]   4.1160752 #>  [55,]   3.8386655 #>  [56,]   3.5799523 #>  [57,]   3.3386755 #>  [58,]   3.1136600 #>  [59,]   2.9038097 #>  [60,]   2.7081026 #>  [61,]   2.5255856 #>  [62,]   2.3553696 #>  [63,]   2.1966255 #>  [64,]   2.0485803 #>  [65,]   1.9105129 #>  [66,]   1.7817507 #>  [67,]   1.6616667 #>  [68,]   1.5496759 #>  [69,]   1.4452329 #>  [70,]   1.3478291 #>  [71,]   1.2569899 #>  [72,]   1.1722730 #>  [73,]   1.0932657 #>  [74,]   1.0195833 #>  [75,]   0.9508668 #>  [76,]   0.8867815 #>  [77,]   0.8270154 #>  [78,]   0.7712773 #>  [79,]   0.7192958 #>  [80,]   0.6708177 #>  [81,]   0.6256068 #>  [82,]   0.5834430 #>  [83,]   0.5441209 #>  [84,]   0.5074490 #>  [85,]   0.4732486 #>  [86,]   0.4413533 #>  [87,]   0.4116075 #>  [88,]   0.3838666 #>  [89,]   0.3579952 #>  [90,]   0.3338676 #>  [91,]   0.3113660 #>  [92,]   0.2903810 #>  [93,]   0.2708103 #>  [94,]   0.2525586 #>  [95,]   0.2355370 #>  [96,]   0.2196626 #>  [97,]   0.2048580 #>  [98,]   0.1910513 #>  [99,]   0.1781751 #> [100,]   0.1661667"},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/OrigScale.html","id":null,"dir":"Reference","previous_headings":"","what":"Return Standardized Estimates to the Original Scale — OrigScale","title":"Return Standardized Estimates to the Original Scale — OrigScale","text":"Return Standardized Estimates Original Scale","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/OrigScale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return Standardized Estimates to the Original Scale — OrigScale","text":"","code":"OrigScale(coef_std, Y, X)"},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/OrigScale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return Standardized Estimates to the Original Scale — OrigScale","text":"coef_std Numeric matrix. Standardized estimates autoregression cross regression coefficients. Y Numeric matrix. Matrix dependent variables (Y). X Numeric matrix. Matrix predictors (X).","code":""},{"path":[]},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/OrigScale.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Return Standardized Estimates to the Original Scale — OrigScale","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/OrigScale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return Standardized Estimates to the Original Scale — OrigScale","text":"","code":"Y <- dat_demo_yx$Y X <- dat_demo_yx$X[, -1] Ystd <- StdMat(Y) Xstd <- StdMat(X) coef_std <- FitVAROLS(Y = Ystd, X = Xstd) FitVAROLS(Y = Y, X = X) #>              [,1]       [,2]       [,3]         [,4]       [,5]       [,6] #> [1,]  0.387920808 0.03231299 0.04869624  0.136574680 0.04612981 0.01316764 #> [2,]  0.038101548 0.51204958 0.01610152 -0.002875789 0.26175258 0.04930620 #> [3,] -0.003827389 0.04704638 0.64303935  0.015204624 0.02304969 0.32942855 OrigScale(coef_std = coef_std, Y = Y, X = X) #>             [,1]        [,2]        [,3]        [,4]         [,5]        [,6] #> [1,]  0.36836768 0.008539283  0.02231498  0.11338780  0.024505442 -0.01143384 #> [2,]  0.01334496 0.481949237 -0.01730029 -0.03223315  0.234373552  0.01815779 #> [3,] -0.03022951 0.014945306  0.60741736 -0.01610408 -0.006149189  0.29620975"},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/PBootCI.html","id":null,"dir":"Reference","previous_headings":"","what":"Parametric Bootstrap Confidence Intervals — PBootCI","title":"Parametric Bootstrap Confidence Intervals — PBootCI","text":"Parametric Bootstrap Confidence Intervals","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/PBootCI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parametric Bootstrap Confidence Intervals — PBootCI","text":"","code":"PBootCI(x, alpha = 0.05)"},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/PBootCI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parametric Bootstrap Confidence Intervals — PBootCI","text":"x Numeric matrix. Output PBootVAROLS(). alpha Numeric. Significance level.","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/PBootCI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parametric Bootstrap Confidence Intervals — PBootCI","text":"list two elements, namely ll lower limit ul upper limit.","code":""},{"path":[]},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/PBootCI.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parametric Bootstrap Confidence Intervals — PBootCI","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/PBootCI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parametric Bootstrap Confidence Intervals — PBootCI","text":"","code":"set.seed(42) system.time(pb <- PBootVAROLS(data = dat_demo, p = 2, B = 10, burn_in = 20)) #>    user  system elapsed  #>   0.119   0.000   0.061  pb$est #>           [,1]        [,2]        [,3]        [,4]        [,5]         [,6] #> [1,] 0.7899726  0.36836768 0.008539283  0.02231498  0.11338780  0.024505442 #> [2,] 1.0001995  0.01334496 0.481949237 -0.01730029 -0.03223315  0.234373552 #> [3,] 1.0666814 -0.03022951 0.014945306  0.60741736 -0.01610408 -0.006149189 #>             [,7] #> [1,] -0.01143384 #> [2,]  0.01815779 #> [3,]  0.29620975 PBootCI(pb) #> $ll #>           [,1]        [,2]        [,3]        [,4]        [,5]        [,6] #> [1,] 0.3838074  0.30829901 -0.01704828 -0.03057283  0.04649171 -0.02836141 #> [2,] 0.6478630 -0.02957636  0.45446362 -0.08252004 -0.06703509  0.19405729 #> [3,] 0.8696531 -0.07535331 -0.02489120  0.55981382 -0.03983556 -0.05304907 #>              [,7] #> [1,] -0.061178743 #> [2,] -0.003047983 #> [3,]  0.271767462 #>  #> $ul #>          [,1]        [,2]       [,3]       [,4]       [,5]       [,6] #> [1,] 1.227579  0.39076365 0.07679172 0.06472094 0.15950531 0.05946045 #> [2,] 1.132903  0.02884185 0.52846257 0.02128911 0.04365536 0.29238903 #> [3,] 1.493904 -0.02126475 0.07561374 0.63468576 0.06009620 0.00894426 #>            [,7] #> [1,] 0.04043717 #> [2,] 0.08005482 #> [3,] 0.32298319 #>  system.time(pb <- PBootVARLasso(   data = dat_demo, p = 2, B = 10, burn_in = 20,   n_lambdas = 100, crit = \"ebic\", max_iter = 1000, tol = 1e-5 )) #>    user  system elapsed  #>  12.318   1.512   6.973  pb$est #>           [,1]      [,2]      [,3]      [,4]       [,5]      [,6]      [,7] #> [1,] 0.7899726 0.3421906 0.0000000 0.0000000 0.08468105 0.0000000 0.0000000 #> [2,] 1.0001995 0.0000000 0.4570574 0.0000000 0.00000000 0.2120659 0.0000000 #> [3,] 1.0666814 0.0000000 0.0000000 0.5880327 0.00000000 0.0000000 0.2736337 PBootCI(pb) #> $ll #>           [,1]      [,2]      [,3]        [,4]        [,5]     [,6] #> [1,] 0.5557074 0.2348853 0.0000000 -0.01932668  0.00000000 0.000000 #> [2,] 0.9050943 0.0000000 0.3620924  0.00000000 -0.01125434 0.110489 #> [3,] 0.9168932 0.0000000 0.0000000  0.46891841  0.00000000 0.000000 #>              [,7] #> [1,] -0.008895035 #> [2,]  0.000000000 #> [3,]  0.162752002 #>  #> $ul #>          [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #> [1,] 1.183012 0.3181934 0.0000000 0.0000000 0.1005727 0.0000000 0.0000000 #> [2,] 1.396692 0.0000000 0.4905112 0.0000000 0.0000000 0.2018012 0.0000000 #> [3,] 1.318093 0.0000000 0.0000000 0.6296753 0.0000000 0.0000000 0.3195748 #>"},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/PBootSE.html","id":null,"dir":"Reference","previous_headings":"","what":"Parametric Bootstrap Standard Errors — PBootSE","title":"Parametric Bootstrap Standard Errors — PBootSE","text":"Parametric Bootstrap Standard Errors","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/PBootSE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parametric Bootstrap Standard Errors — PBootSE","text":"","code":"PBootSE(x)"},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/PBootSE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parametric Bootstrap Standard Errors — PBootSE","text":"x Numeric matrix. Output PBootVAROLS().","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/PBootSE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parametric Bootstrap Standard Errors — PBootSE","text":"matrix standard error.","code":""},{"path":[]},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/PBootSE.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parametric Bootstrap Standard Errors — PBootSE","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/PBootSE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parametric Bootstrap Standard Errors — PBootSE","text":"","code":"set.seed(42) system.time(pb <- PBootVAROLS(data = dat_demo, p = 2, B = 10, burn_in = 20)) #>    user  system elapsed  #>   0.111   0.009   0.062  pb$est #>           [,1]        [,2]        [,3]        [,4]        [,5]         [,6] #> [1,] 0.7899726  0.36836768 0.008539283  0.02231498  0.11338780  0.024505442 #> [2,] 1.0001995  0.01334496 0.481949237 -0.01730029 -0.03223315  0.234373552 #> [3,] 1.0666814 -0.03022951 0.014945306  0.60741736 -0.01610408 -0.006149189 #>             [,7] #> [1,] -0.01143384 #> [2,]  0.01815779 #> [3,]  0.29620975 PBootSE(pb) #>           [,1]       [,2]       [,3]       [,4]       [,5]       [,6] #> [1,] 0.2961482 0.02734471 0.02912956 0.03073139 0.03770805 0.03176866 #> [2,] 0.1584558 0.01942284 0.02368919 0.03273620 0.03645469 0.03350224 #> [3,] 0.1992781 0.01874850 0.03340307 0.02829851 0.03405137 0.02415483 #>            [,7] #> [1,] 0.03552002 #> [2,] 0.03015250 #> [3,] 0.01826943 system.time(pb <- PBootVARLasso(   data = dat_demo, p = 2, B = 10, burn_in = 20,   n_lambdas = 100, crit = \"ebic\", max_iter = 1000, tol = 1e-5 )) #>    user  system elapsed  #>  11.858   1.480   6.710  pb$est #>           [,1]      [,2]      [,3]      [,4]       [,5]      [,6]      [,7] #> [1,] 0.7899726 0.3421906 0.0000000 0.0000000 0.08468105 0.0000000 0.0000000 #> [2,] 1.0001995 0.0000000 0.4570574 0.0000000 0.00000000 0.2120659 0.0000000 #> [3,] 1.0666814 0.0000000 0.0000000 0.5880327 0.00000000 0.0000000 0.2736337 PBootSE(pb) #>           [,1]       [,2]       [,3]        [,4]        [,5]      [,6] #> [1,] 0.2043588 0.02876971 0.00000000 0.007885977 0.035309545 0.0000000 #> [2,] 0.1575116 0.00000000 0.04572152 0.000000000 0.004592173 0.0335006 #> [3,] 0.1527449 0.00000000 0.00000000 0.052575940 0.000000000 0.0000000 #>             [,7] #> [1,] 0.003629493 #> [2,] 0.000000000 #> [3,] 0.049996051"},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/PBootVARLasso.html","id":null,"dir":"Reference","previous_headings":"","what":"Parametric Bootstrap for the Vector Autoregressive Model\nUsing Lasso Regularization — PBootVARLasso","title":"Parametric Bootstrap for the Vector Autoregressive Model\nUsing Lasso Regularization — PBootVARLasso","text":"Parametric Bootstrap Vector Autoregressive Model Using Lasso Regularization","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/PBootVARLasso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parametric Bootstrap for the Vector Autoregressive Model\nUsing Lasso Regularization — PBootVARLasso","text":"","code":"PBootVARLasso(data, p, B, burn_in, n_lambdas, crit, max_iter, tol)"},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/PBootVARLasso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parametric Bootstrap for the Vector Autoregressive Model\nUsing Lasso Regularization — PBootVARLasso","text":"data Numeric matrix. time series data dimensions t k, t number observations k number variables. p Integer. order VAR model (number lags). B Integer. Number bootstrap samples generate. burn_in Integer. Number burn-observations exclude returning results simulation step. n_lambdas Integer. Number lambdas generate. crit Character string. Information criteria use. Valid values include \"aic\", \"bic\", \"ebic\". max_iter Integer. maximum number iterations coordinate descent algorithm (e.g., max_iter = 10000). tol Numeric. Convergence tolerance. algorithm stops change coefficients iterations tolerance (e.g., tol = 1e-5).","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/PBootVARLasso.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parametric Bootstrap for the Vector Autoregressive Model\nUsing Lasso Regularization — PBootVARLasso","text":"List containing estimates (est) bootstrap estimates (boot).","code":""},{"path":[]},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/PBootVARLasso.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parametric Bootstrap for the Vector Autoregressive Model\nUsing Lasso Regularization — PBootVARLasso","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/PBootVARLasso.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parametric Bootstrap for the Vector Autoregressive Model\nUsing Lasso Regularization — PBootVARLasso","text":"","code":"pb <- PBootVARLasso(data = dat_demo, p = 2, B = 10, burn_in = 20,   n_lambdas = 100, crit = \"ebic\", max_iter = 1000, tol = 1e-5) str(pb) #> List of 2 #>  $ est : num [1:3, 1:7] 0.79 1 1.067 0.342 0 ... #>  $ boot: num [1:10, 1:21] 1.008 0.869 0.954 0.924 0.568 ..."},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/PBootVAROLS.html","id":null,"dir":"Reference","previous_headings":"","what":"Parametric Bootstrap for the Vector Autoregressive Model\nUsing Ordinary Least Squares — PBootVAROLS","title":"Parametric Bootstrap for the Vector Autoregressive Model\nUsing Ordinary Least Squares — PBootVAROLS","text":"Parametric Bootstrap Vector Autoregressive Model Using Ordinary Least Squares","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/PBootVAROLS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parametric Bootstrap for the Vector Autoregressive Model\nUsing Ordinary Least Squares — PBootVAROLS","text":"","code":"PBootVAROLS(data, p, B, burn_in)"},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/PBootVAROLS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parametric Bootstrap for the Vector Autoregressive Model\nUsing Ordinary Least Squares — PBootVAROLS","text":"data Numeric matrix. time series data dimensions t k, t number observations k number variables. p Integer. order VAR model (number lags). B Integer. Number bootstrap samples generate. burn_in Integer. Number burn-observations exclude returning results simulation step.","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/PBootVAROLS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parametric Bootstrap for the Vector Autoregressive Model\nUsing Ordinary Least Squares — PBootVAROLS","text":"List containing estimates (est) bootstrap estimates (boot).","code":""},{"path":[]},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/PBootVAROLS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parametric Bootstrap for the Vector Autoregressive Model\nUsing Ordinary Least Squares — PBootVAROLS","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/PBootVAROLS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parametric Bootstrap for the Vector Autoregressive Model\nUsing Ordinary Least Squares — PBootVAROLS","text":"","code":"pb <- PBootVAROLS(data = dat_demo, p = 2, B = 10, burn_in = 20) str(pb) #> List of 2 #>  $ est : num [1:3, 1:7] 0.79 1.0002 1.0667 0.3684 0.0133 ... #>  $ boot: num [1:10, 1:21] 0.528 0.94 0.622 0.698 0.627 ..."},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/SearchVARLasso.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute AIC, BIC, and EBIC for Lasso Regularization — SearchVARLasso","title":"Compute AIC, BIC, and EBIC for Lasso Regularization — SearchVARLasso","text":"function computes Akaike Information Criterion (AIC), Bayesian Information Criterion (BIC), Extended Bayesian Information Criterion (EBIC) given matrix predictors X, matrix outcomes Y, vector lambda hyperparameters Lasso regularization.","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/SearchVARLasso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute AIC, BIC, and EBIC for Lasso Regularization — SearchVARLasso","text":"","code":"SearchVARLasso(Ystd, Xstd, lambdas, max_iter, tol)"},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/SearchVARLasso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute AIC, BIC, and EBIC for Lasso Regularization — SearchVARLasso","text":"Ystd Numeric matrix. Matrix standardized dependent variables (Y). Xstd Numeric matrix. Matrix standardized predictors (X). lambdas Numeric vector. Vector lambda hyperparameters Lasso regularization. max_iter Integer. maximum number iterations coordinate descent algorithm (e.g., max_iter = 10000). tol Numeric. Convergence tolerance. algorithm stops change coefficients iterations tolerance (e.g., tol = 1e-5).","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/SearchVARLasso.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute AIC, BIC, and EBIC for Lasso Regularization — SearchVARLasso","text":"List containing two elements: Element 1: Matrix columns lambda, AIC, BIC, EBIC values. Element 2: List matrices containing estimated autoregressive cross-regression coefficients lambda.","code":""},{"path":[]},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/SearchVARLasso.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute AIC, BIC, and EBIC for Lasso Regularization — SearchVARLasso","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/SearchVARLasso.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute AIC, BIC, and EBIC for Lasso Regularization — SearchVARLasso","text":"","code":"Ystd <- StdMat(dat_demo_yx$Y) Xstd <- StdMat(dat_demo_yx$X[, -1]) lambdas <- 10^seq(-5, 5, length.out = 100) search <- SearchVARLasso(Ystd = Ystd, Xstd = Xstd, lambdas = lambdas,   max_iter = 10000, tol = 1e-5) plot(x = 1:nrow(search$criteria), y = search$criteria[, 4],   type = \"b\", xlab = \"lambda\", ylab = \"EBIC\")"},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/SelectVARLasso.html","id":null,"dir":"Reference","previous_headings":"","what":"Select the Lasso Estimates from the Grid Search — SelectVARLasso","title":"Select the Lasso Estimates from the Grid Search — SelectVARLasso","text":"Select Lasso Estimates Grid Search","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/SelectVARLasso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select the Lasso Estimates from the Grid Search — SelectVARLasso","text":"","code":"SelectVARLasso(search, crit = \"ebic\")"},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/SelectVARLasso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select the Lasso Estimates from the Grid Search — SelectVARLasso","text":"search Object. Output SearchVARLasso() function. crit Character string. Information criteria use. Valid values include \"aic\", \"bic\", \"ebic\".","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/SelectVARLasso.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select the Lasso Estimates from the Grid Search — SelectVARLasso","text":"Returns Lasso estimates autoregression cross regression coefficients.","code":""},{"path":[]},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/SelectVARLasso.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Select the Lasso Estimates from the Grid Search — SelectVARLasso","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/SelectVARLasso.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select the Lasso Estimates from the Grid Search — SelectVARLasso","text":"","code":"Ystd <- StdMat(dat_demo_yx$Y) Xstd <- StdMat(dat_demo_yx$X[, -1]) lambdas <- 10^seq(-5, 5, length.out = 100) search <- SearchVARLasso(   Ystd = Ystd, Xstd = Xstd, lambdas = lambdas,   max_iter = 10000, tol = 1e-5 ) SelectVARLasso(search, crit = \"ebic\") #>           [,1]      [,2]      [,3]       [,4]      [,5]      [,6] #> [1,] 0.3440823 0.0000000 0.0000000 0.08601767 0.0000000 0.0000000 #> [2,] 0.0000000 0.4580172 0.0000000 0.00000000 0.2130337 0.0000000 #> [3,] 0.0000000 0.0000000 0.5889874 0.00000000 0.0000000 0.2746474 #> attr(,\"lambda\") #> [1] 73.90722 #> attr(,\"aic\") #> [1] 495.0721 #> attr(,\"bic\") #> [1] 524.5066 #> attr(,\"ebic\") #> [1] 544.44"},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/SimVAR.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Data from a Vector Autoregressive (VAR) Model — SimVAR","title":"Simulate Data from a Vector Autoregressive (VAR) Model — SimVAR","text":"function generates synthetic time series data Vector Autoregressive (VAR) model.","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/SimVAR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Data from a Vector Autoregressive (VAR) Model — SimVAR","text":"","code":"SimVAR(time, burn_in, constant, coef, chol_cov)"},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/SimVAR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Data from a Vector Autoregressive (VAR) Model — SimVAR","text":"time Integer. Number time points simulate. burn_in Integer. Number burn-observations exclude returning results. constant Numeric vector. constant term vector length k, k number variables. coef Numeric matrix. Coefficient matrix dimensions k (k * p). k k block corresponds coefficient matrix particular lag. chol_cov Numeric matrix. Cholesky decomposition covariance matrix multivariate normal noise. dimensions k k.","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/SimVAR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Data from a Vector Autoregressive (VAR) Model — SimVAR","text":"Numeric matrix containing simulated time series data dimensions k time, k number variables time number observations.","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/SimVAR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate Data from a Vector Autoregressive (VAR) Model — SimVAR","text":"SimVAR() function generates synthetic time series data Vector Autoregressive (VAR) model. VAR model defined constant term constant, coefficient matrix coef, Cholesky decomposition covariance matrix multivariate normal process noise chol_cov. generated time series data follows VAR(p) process, p number lags specified size coef. generated data includes burn-period, excluded returning results. steps involved generating VAR time series data follows: Extract number variables k number lags p input. Create matrix data size k (time + burn_in) store generated VAR time series data. Set initial values matrix data using constant term constant. time point starting p-th time point time + burn_in - 1: Generate vector random noise multivariate normal distribution mean 0 covariance matrix chol_cov. Generate VAR time series values variable j time t using formula: $$Y_{tj} = constant_j +     \\sum_{l = 1}^{p} \\sum_{m = 1}^{k} (coef_{jm} * Y_{im}) +     \\text{noise}_{j}$$ \\(Y_{tj}\\) value variable j time t, \\(constant_j\\) constant term variable j, \\(coef_{jm}\\) coefficients variable j lagged variables order p, \\(Y_{tm}\\) lagged values variable m order p time t, \\(noise_{j}\\) element j generated vector random process noise. Transpose matrix data return required time period burn-period, column burn_in column time + burn_in - 1.","code":""},{"path":[]},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/SimVAR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate Data from a Vector Autoregressive (VAR) Model — SimVAR","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/SimVAR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Data from a Vector Autoregressive (VAR) Model — SimVAR","text":"","code":"set.seed(42) time <- 50L burn_in <- 10L k <- 3 p <- 2 constant <- c(1, 1, 1) coef <- matrix(   data = c(     0.4, 0.0, 0.0, 0.1, 0.0, 0.0,     0.0, 0.5, 0.0, 0.0, 0.2, 0.0,     0.0, 0.0, 0.6, 0.0, 0.0, 0.3   ),   nrow = k,   byrow = TRUE ) chol_cov <- chol(diag(3)) y <- SimVAR(   time = time,   burn_in = burn_in,   constant = constant,   coef = coef,   chol_cov = chol_cov ) head(y) #>           [,1]     [,2]     [,3] #> [1,] 1.6604813 4.407838 7.473852 #> [2,] 0.2947893 2.772433 7.051225 #> [3,] 1.7966908 2.317002 5.759385 #> [4,] 3.2784861 3.105018 6.957684 #> [5,] 1.9508525 3.791006 7.690658 #> [6,] 0.6096591 3.407655 6.828098"},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/StdMat.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardize Matrix — StdMat","title":"Standardize Matrix — StdMat","text":"function standardizes given matrix centering columns scaling unit variance.","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/StdMat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardize Matrix — StdMat","text":"","code":"StdMat(X)"},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/StdMat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardize Matrix — StdMat","text":"X Numeric matrix. matrix standardized.","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/StdMat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardize Matrix — StdMat","text":"Numeric matrix standardized values.","code":""},{"path":[]},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/StdMat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Standardize Matrix — StdMat","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/StdMat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standardize Matrix — StdMat","text":"","code":"std <- StdMat(dat_demo) colMeans(std) #> [1]  1.191462e-15 -6.158789e-16 -5.573014e-15 var(std) #>             [,1]        [,2]       [,3] #> [1,]  1.00000000 -0.02064809 0.01776756 #> [2,] -0.02064809  1.00000000 0.01682606 #> [3,]  0.01776756  0.01682606 1.00000000"},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/YX.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Y and X Matrices — YX","title":"Create Y and X Matrices — YX","text":"function creates dependent variable (Y) predictor variable (X) matrices.","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/YX.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Y and X Matrices — YX","text":"","code":"YX(data, p)"},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/YX.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Y and X Matrices — YX","text":"data Numeric matrix. time series data dimensions t k, t number observations k number variables. p Integer. order VAR model (number lags).","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/YX.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Y and X Matrices — YX","text":"List containing dependent variable (Y) predictor variable (X) matrices. Note resulting matrices t - p rows.","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/YX.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Y and X Matrices — YX","text":"YX() function creates Y X matrices required fitting Vector Autoregressive (VAR) model. Given input data matrix dimensions t k, t number observations k number variables, order VAR model p (number lags), function constructs lagged predictor matrix X dependent variable matrix Y. steps involved creating Y X matrices follows: Determine number observations t number variables k input data matrix. Create matrices X Y store lagged variables dependent variable, respectively. Populate matrices X Y appropriate lagged data. predictors matrix X contains column ones lagged values dependent variables, dependent variable matrix Y contains original values dependent variables. function returns list containing Y X matrices, can used analysis estimation VAR model parameters.","code":""},{"path":[]},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/YX.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create Y and X Matrices — YX","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/YX.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Y and X Matrices — YX","text":"","code":"set.seed(42) time <- 50L burn_in <- 10L k <- 3 p <- 2 constant <- c(1, 1, 1) coef <- matrix(   data = c(     0.4, 0.0, 0.0, 0.1, 0.0, 0.0,     0.0, 0.5, 0.0, 0.0, 0.2, 0.0,     0.0, 0.0, 0.6, 0.0, 0.0, 0.3   ),   nrow = k,   byrow = TRUE ) chol_cov <- chol(diag(3)) y <- SimVAR(   time = time,   burn_in = burn_in,   constant = constant,   coef = coef,   chol_cov = chol_cov ) yx <- YX(data = y, p = 2) str(yx) #> List of 2 #>  $ X: num [1:48, 1:7] 1 1 1 1 1 1 1 1 1 1 ... #>  $ Y: num [1:48, 1:3] 1.8 3.28 1.95 0.61 1.44 ..."},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/dat_demo.html","id":null,"dir":"Reference","previous_headings":"","what":"Data from the Vector Autoregressive Model — dat_demo","title":"Data from the Vector Autoregressive Model — dat_demo","text":"Data Vector Autoregressive Model","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/dat_demo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data from the Vector Autoregressive Model — dat_demo","text":"","code":"dat_demo"},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/dat_demo.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data from the Vector Autoregressive Model — dat_demo","text":"matrix 1000 rows (time points) k = 3 columns (variables) generated p = 2 vector autoregressive model given $$     Y_{1_{t}}     =     1 +     0.4 Y_{1_{t - 1}} + 0.0 Y_{2_{t - 1}} + 0.0 Y_{3_{t - 1}} +     0.1 Y_{1_{t - 2}} + 0.0 Y_{2_{t - 2}} + 0.0 Y_{3_{t - 2}} +    \\varepsilon_{1_{t}} ,   $$ $$     Y_{2_{t}}     =     1 +     0.0 Y_{1_{t - 1}} + 0.5 Y_{2_{t - 1}} + 0.0 Y_{3_{t - 1}} +     0.0 Y_{1_{t - 2}} + 0.2 Y_{2_{t - 2}} + 0.0 Y_{3_{t - 2}} +     \\varepsilon_{2_{t}} ,   $$ $$     Y_{3_{t}}     =     1 +     0.0 Y_{1_{t - 1}} + 0.0 Y_{2_{t - 1}} + 0.6 Y_{3_{t - 1}} +     0.0 Y_{1_{t - 2}} + 0.0 Y_{2_{t - 2}} + 0.3 Y_{3_{t - 2}} +     \\varepsilon_{3_{t}}   $$ simplifies $$     Y_{1_{t}} = 1 + 0.4 Y_{1_{t - 1}} + 0.1 Y_{1_{t - 2}} +     \\varepsilon_{1_{t}} ,   $$ $$     Y_{2_{t}} = 1 + 0.5 Y_{2_{t - 1}} + 0.2 Y_{2_{t - 2}} +     \\varepsilon_{2_{t}} ,   $$ $$     Y_{3_{t}} = 1 + 0.6 Y_{3_{t - 1}} + 0.3 Y_{3_{t - 2}} +     \\varepsilon_{3_{t}} .   $$ covariance matrix process noise identity matrix.","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/dat_demo_exo.html","id":null,"dir":"Reference","previous_headings":"","what":"Data from the Vector Autoregressive Model with Exogenous Variables — dat_demo_exo","title":"Data from the Vector Autoregressive Model with Exogenous Variables — dat_demo_exo","text":"Data Vector Autoregressive Model Exogenous Variables","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/dat_demo_exo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data from the Vector Autoregressive Model with Exogenous Variables — dat_demo_exo","text":"","code":"dat_demo_exo"},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/dat_demo_exo.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data from the Vector Autoregressive Model with Exogenous Variables — dat_demo_exo","text":"matrix 1000 rows (time points) k = 3 (autoregressive variables) plus m = 3 columns (exogenous variables) generated p = 2 vector autoregressive model given $$     Y_{1_{t}}     =     1 +     0.4 Y_{1_{t - 1}} + 0.0 Y_{2_{t - 1}} + 0.0 Y_{3_{t - 1}} +     0.1 Y_{1_{t - 2}} + 0.0 Y_{2_{t - 2}} + 0.0 Y_{3_{t - 2}} +     0.5 X_{1} + 0.0 X_{2} + 0.0 X_{3}    \\varepsilon_{1_{t}} ,   $$ $$     Y_{2_{t}}     =     1 +     0.0 Y_{1_{t - 1}} + 0.5 Y_{2_{t - 1}} + 0.0 Y_{3_{t - 1}} +     0.0 Y_{1_{t - 2}} + 0.2 Y_{2_{t - 2}} + 0.0 Y_{3_{t - 2}} +     0.0 X_{1} + 0.5 X_{2} + 0.0 X_{3}     \\varepsilon_{2_{t}} ,   $$ $$     Y_{3_{t}}     =     1 +     0.0 Y_{1_{t - 1}} + 0.0 Y_{2_{t - 1}} + 0.6 Y_{3_{t - 1}} +     0.0 Y_{1_{t - 2}} + 0.0 Y_{2_{t - 2}} + 0.3 Y_{3_{t - 2}} +     0.0 X_{1} + 0.0 X_{2} + 0.5 X_{3}     \\varepsilon_{3_{t}}   $$ simplifies $$     Y_{1_{t}} = 1 + 0.4 Y_{1_{t - 1}} + 0.1 Y_{1_{t - 2}} + 0.5 X_{1}     \\varepsilon_{1_{t}} ,   $$ $$     Y_{2_{t}} = 1 + 0.5 Y_{2_{t - 1}} + 0.2 Y_{2_{t - 2}} + 0.5 X_{2}     \\varepsilon_{2_{t}} ,   $$ $$     Y_{3_{t}} = 1 + 0.6 Y_{3_{t - 1}} + 0.3 Y_{3_{t - 2}} + 0.5 X_{3}     \\varepsilon_{3_{t}} .   $$ covariance matrix process noise identity matrix.","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/dat_demo_exo_yx.html","id":null,"dir":"Reference","previous_headings":"","what":"Data from the Vector Autoregressive Model (Y) and Lagged Predictors\nand Exogenous Variables (X) — dat_demo_exo_yx","title":"Data from the Vector Autoregressive Model (Y) and Lagged Predictors\nand Exogenous Variables (X) — dat_demo_exo_yx","text":"Data Vector Autoregressive Model (Y) Lagged Predictors Exogenous Variables (X)","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/dat_demo_exo_yx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data from the Vector Autoregressive Model (Y) and Lagged Predictors\nand Exogenous Variables (X) — dat_demo_exo_yx","text":"","code":"dat_demo_exo_yx"},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/dat_demo_exo_yx.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data from the Vector Autoregressive Model (Y) and Lagged Predictors\nand Exogenous Variables (X) — dat_demo_exo_yx","text":"list elements Y X Y equal dat_demo_exo data set minus p = 2 terminal rows X matrix ones first column lagged values Y exogenous variables rest columns.","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/dat_demo_yx.html","id":null,"dir":"Reference","previous_headings":"","what":"Data from the Vector Autoregressive Model (Y) and Lagged Predictors (X) — dat_demo_yx","title":"Data from the Vector Autoregressive Model (Y) and Lagged Predictors (X) — dat_demo_yx","text":"Data Vector Autoregressive Model (Y) Lagged Predictors (X)","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/dat_demo_yx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data from the Vector Autoregressive Model (Y) and Lagged Predictors (X) — dat_demo_yx","text":"","code":"dat_demo_yx"},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/dat_demo_yx.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data from the Vector Autoregressive Model (Y) and Lagged Predictors (X) — dat_demo_yx","text":"list elements Y X Y equal dat_demo data set minus p = 2 terminal rows X matrix ones first column lagged values Y rest columns.","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/fitAutoReg-package.html","id":null,"dir":"Reference","previous_headings":"","what":"fitAutoReg: Fit Autoregressive Models — fitAutoReg-package","title":"fitAutoReg: Fit Autoregressive Models — fitAutoReg-package","text":"Fit autoregressive models.","code":""},{"path":[]},{"path":"https://github.com/ijapesigan/fitAutoReg/reference/fitAutoReg-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"fitAutoReg: Fit Autoregressive Models — fitAutoReg-package","text":"Maintainer: Ivan Jacob Agaloos Pesigan ijapesigan@gmail.com (ORCID) [copyright holder]","code":""},{"path":"https://github.com/ijapesigan/fitAutoReg/news/index.html","id":"fitautoreg-0009000-development-version","dir":"Changelog","previous_headings":"","what":"fitAutoReg 0.0.0.9000 (development version)","title":"fitAutoReg 0.0.0.9000 (development version)","text":"VAR(p) OLS constant vector, auto cross regression coefficients VAR(p) Lasso auto cross regression coefficients","code":""}]
