// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// FitVARLassoSearch
arma::mat FitVARLassoSearch(const arma::mat& YStd, const arma::mat& XStd, const arma::vec& lambdas, const std::string& crit, int max_iter, double tol);
RcppExport SEXP _fitAutoReg_FitVARLassoSearch(SEXP YStdSEXP, SEXP XStdSEXP, SEXP lambdasSEXP, SEXP critSEXP, SEXP max_iterSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type YStd(YStdSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type XStd(XStdSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type lambdas(lambdasSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type crit(critSEXP);
    Rcpp::traits::input_parameter< int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(FitVARLassoSearch(YStd, XStd, lambdas, crit, max_iter, tol));
    return rcpp_result_gen;
END_RCPP
}
// FitVARLasso
arma::mat FitVARLasso(const arma::mat& YStd, const arma::mat& XStd, const double& lambda, int max_iter, double tol);
RcppExport SEXP _fitAutoReg_FitVARLasso(SEXP YStdSEXP, SEXP XStdSEXP, SEXP lambdaSEXP, SEXP max_iterSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type YStd(YStdSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type XStd(XStdSEXP);
    Rcpp::traits::input_parameter< const double& >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(FitVARLasso(YStd, XStd, lambda, max_iter, tol));
    return rcpp_result_gen;
END_RCPP
}
// FitVAROLS
arma::mat FitVAROLS(const arma::mat& Y, const arma::mat& X);
RcppExport SEXP _fitAutoReg_FitVAROLS(SEXP YSEXP, SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(FitVAROLS(Y, X));
    return rcpp_result_gen;
END_RCPP
}
// LambdaSeq
arma::vec LambdaSeq(const arma::mat& YStd, const arma::mat& XStd, int n_lambdas);
RcppExport SEXP _fitAutoReg_LambdaSeq(SEXP YStdSEXP, SEXP XStdSEXP, SEXP n_lambdasSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type YStd(YStdSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type XStd(XStdSEXP);
    Rcpp::traits::input_parameter< int >::type n_lambdas(n_lambdasSEXP);
    rcpp_result_gen = Rcpp::wrap(LambdaSeq(YStd, XStd, n_lambdas));
    return rcpp_result_gen;
END_RCPP
}
// OrigScale
arma::mat OrigScale(const arma::mat& coef_std, const arma::mat& Y, const arma::mat& X);
RcppExport SEXP _fitAutoReg_OrigScale(SEXP coef_stdSEXP, SEXP YSEXP, SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type coef_std(coef_stdSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(OrigScale(coef_std, Y, X));
    return rcpp_result_gen;
END_RCPP
}
// PBootVARLasso
Rcpp::List PBootVARLasso(const arma::mat& data, int p, int B, int burn_in, int n_lambdas, const std::string& crit, int max_iter, double tol);
RcppExport SEXP _fitAutoReg_PBootVARLasso(SEXP dataSEXP, SEXP pSEXP, SEXP BSEXP, SEXP burn_inSEXP, SEXP n_lambdasSEXP, SEXP critSEXP, SEXP max_iterSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type B(BSEXP);
    Rcpp::traits::input_parameter< int >::type burn_in(burn_inSEXP);
    Rcpp::traits::input_parameter< int >::type n_lambdas(n_lambdasSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type crit(critSEXP);
    Rcpp::traits::input_parameter< int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(PBootVARLasso(data, p, B, burn_in, n_lambdas, crit, max_iter, tol));
    return rcpp_result_gen;
END_RCPP
}
// PBootVAROLS
Rcpp::List PBootVAROLS(const arma::mat& data, int p, int B, int burn_in);
RcppExport SEXP _fitAutoReg_PBootVAROLS(SEXP dataSEXP, SEXP pSEXP, SEXP BSEXP, SEXP burn_inSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type B(BSEXP);
    Rcpp::traits::input_parameter< int >::type burn_in(burn_inSEXP);
    rcpp_result_gen = Rcpp::wrap(PBootVAROLS(data, p, B, burn_in));
    return rcpp_result_gen;
END_RCPP
}
// RBootVARExoLasso
Rcpp::List RBootVARExoLasso(const arma::mat& data, const arma::mat& exo_mat, int p, int B, int n_lambdas, const std::string& crit, int max_iter, double tol);
RcppExport SEXP _fitAutoReg_RBootVARExoLasso(SEXP dataSEXP, SEXP exo_matSEXP, SEXP pSEXP, SEXP BSEXP, SEXP n_lambdasSEXP, SEXP critSEXP, SEXP max_iterSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type exo_mat(exo_matSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type B(BSEXP);
    Rcpp::traits::input_parameter< int >::type n_lambdas(n_lambdasSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type crit(critSEXP);
    Rcpp::traits::input_parameter< int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(RBootVARExoLasso(data, exo_mat, p, B, n_lambdas, crit, max_iter, tol));
    return rcpp_result_gen;
END_RCPP
}
// RBootVARExoOLS
Rcpp::List RBootVARExoOLS(const arma::mat& data, const arma::mat& exo_mat, int p, int B);
RcppExport SEXP _fitAutoReg_RBootVARExoOLS(SEXP dataSEXP, SEXP exo_matSEXP, SEXP pSEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type exo_mat(exo_matSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type B(BSEXP);
    rcpp_result_gen = Rcpp::wrap(RBootVARExoOLS(data, exo_mat, p, B));
    return rcpp_result_gen;
END_RCPP
}
// RBootVARLasso
Rcpp::List RBootVARLasso(const arma::mat& data, int p, int B, int n_lambdas, const std::string& crit, int max_iter, double tol);
RcppExport SEXP _fitAutoReg_RBootVARLasso(SEXP dataSEXP, SEXP pSEXP, SEXP BSEXP, SEXP n_lambdasSEXP, SEXP critSEXP, SEXP max_iterSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type B(BSEXP);
    Rcpp::traits::input_parameter< int >::type n_lambdas(n_lambdasSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type crit(critSEXP);
    Rcpp::traits::input_parameter< int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(RBootVARLasso(data, p, B, n_lambdas, crit, max_iter, tol));
    return rcpp_result_gen;
END_RCPP
}
// RBootVAROLS
Rcpp::List RBootVAROLS(const arma::mat& data, int p, int B);
RcppExport SEXP _fitAutoReg_RBootVAROLS(SEXP dataSEXP, SEXP pSEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type B(BSEXP);
    rcpp_result_gen = Rcpp::wrap(RBootVAROLS(data, p, B));
    return rcpp_result_gen;
END_RCPP
}
// SearchVARLasso
Rcpp::List SearchVARLasso(const arma::mat& YStd, const arma::mat& XStd, const arma::vec& lambdas, int max_iter, double tol);
RcppExport SEXP _fitAutoReg_SearchVARLasso(SEXP YStdSEXP, SEXP XStdSEXP, SEXP lambdasSEXP, SEXP max_iterSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type YStd(YStdSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type XStd(XStdSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type lambdas(lambdasSEXP);
    Rcpp::traits::input_parameter< int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(SearchVARLasso(YStd, XStd, lambdas, max_iter, tol));
    return rcpp_result_gen;
END_RCPP
}
// StdMat
arma::mat StdMat(const arma::mat& X);
RcppExport SEXP _fitAutoReg_StdMat(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(StdMat(X));
    return rcpp_result_gen;
END_RCPP
}
// SimVARExo
arma::mat SimVARExo(int time, int burn_in, const arma::vec& constant, const arma::mat& coef, const arma::mat& chol_cov, const arma::mat& exo_mat, const arma::mat& exo_coef);
RcppExport SEXP _fitAutoReg_SimVARExo(SEXP timeSEXP, SEXP burn_inSEXP, SEXP constantSEXP, SEXP coefSEXP, SEXP chol_covSEXP, SEXP exo_matSEXP, SEXP exo_coefSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type time(timeSEXP);
    Rcpp::traits::input_parameter< int >::type burn_in(burn_inSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type constant(constantSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type coef(coefSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type chol_cov(chol_covSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type exo_mat(exo_matSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type exo_coef(exo_coefSEXP);
    rcpp_result_gen = Rcpp::wrap(SimVARExo(time, burn_in, constant, coef, chol_cov, exo_mat, exo_coef));
    return rcpp_result_gen;
END_RCPP
}
// SimVAR
arma::mat SimVAR(int time, int burn_in, const arma::vec& constant, const arma::mat& coef, const arma::mat& chol_cov);
RcppExport SEXP _fitAutoReg_SimVAR(SEXP timeSEXP, SEXP burn_inSEXP, SEXP constantSEXP, SEXP coefSEXP, SEXP chol_covSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type time(timeSEXP);
    Rcpp::traits::input_parameter< int >::type burn_in(burn_inSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type constant(constantSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type coef(coefSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type chol_cov(chol_covSEXP);
    rcpp_result_gen = Rcpp::wrap(SimVAR(time, burn_in, constant, coef, chol_cov));
    return rcpp_result_gen;
END_RCPP
}
// YXExo
Rcpp::List YXExo(const arma::mat& data, int p, const arma::mat& exo_mat);
RcppExport SEXP _fitAutoReg_YXExo(SEXP dataSEXP, SEXP pSEXP, SEXP exo_matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type exo_mat(exo_matSEXP);
    rcpp_result_gen = Rcpp::wrap(YXExo(data, p, exo_mat));
    return rcpp_result_gen;
END_RCPP
}
// YX
Rcpp::List YX(const arma::mat& data, int p);
RcppExport SEXP _fitAutoReg_YX(SEXP dataSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(YX(data, p));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_fitAutoReg_FitVARLassoSearch", (DL_FUNC) &_fitAutoReg_FitVARLassoSearch, 6},
    {"_fitAutoReg_FitVARLasso", (DL_FUNC) &_fitAutoReg_FitVARLasso, 5},
    {"_fitAutoReg_FitVAROLS", (DL_FUNC) &_fitAutoReg_FitVAROLS, 2},
    {"_fitAutoReg_LambdaSeq", (DL_FUNC) &_fitAutoReg_LambdaSeq, 3},
    {"_fitAutoReg_OrigScale", (DL_FUNC) &_fitAutoReg_OrigScale, 3},
    {"_fitAutoReg_PBootVARLasso", (DL_FUNC) &_fitAutoReg_PBootVARLasso, 8},
    {"_fitAutoReg_PBootVAROLS", (DL_FUNC) &_fitAutoReg_PBootVAROLS, 4},
    {"_fitAutoReg_RBootVARExoLasso", (DL_FUNC) &_fitAutoReg_RBootVARExoLasso, 8},
    {"_fitAutoReg_RBootVARExoOLS", (DL_FUNC) &_fitAutoReg_RBootVARExoOLS, 4},
    {"_fitAutoReg_RBootVARLasso", (DL_FUNC) &_fitAutoReg_RBootVARLasso, 7},
    {"_fitAutoReg_RBootVAROLS", (DL_FUNC) &_fitAutoReg_RBootVAROLS, 3},
    {"_fitAutoReg_SearchVARLasso", (DL_FUNC) &_fitAutoReg_SearchVARLasso, 5},
    {"_fitAutoReg_StdMat", (DL_FUNC) &_fitAutoReg_StdMat, 1},
    {"_fitAutoReg_SimVARExo", (DL_FUNC) &_fitAutoReg_SimVARExo, 7},
    {"_fitAutoReg_SimVAR", (DL_FUNC) &_fitAutoReg_SimVAR, 5},
    {"_fitAutoReg_YXExo", (DL_FUNC) &_fitAutoReg_YXExo, 3},
    {"_fitAutoReg_YX", (DL_FUNC) &_fitAutoReg_YX, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_fitAutoReg(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
